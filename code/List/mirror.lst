
AVRASM ver. 2.1.30  E:\Power side-view mirror\code\List\mirror.asm Mon Sep 19 08:29:24 2022

E:\Power side-view mirror\code\List\mirror.asm(1061): warning: Register r3 already defined by the .DEF directive
E:\Power side-view mirror\code\List\mirror.asm(1062): warning: Register r6 already defined by the .DEF directive
E:\Power side-view mirror\code\List\mirror.asm(1063): warning: Register r5 already defined by the .DEF directive
E:\Power side-view mirror\code\List\mirror.asm(1064): warning: Register r8 already defined by the .DEF directive
E:\Power side-view mirror\code\List\mirror.asm(1065): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Advanced
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega328P
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2303
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _timerOverFlow=R3
                 	.DEF _status=R6
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R8
                 	.DEF __lcd_maxx=R7
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0065 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 009d 	JMP  _timer1_ovf_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x3B:
000034 0000      	.DB  0x0,0x0
                 _0x0:
000035 6944
000036 3a73
000037 2520
000038 2e30      	.DB  0x44,0x69,0x73,0x3A,0x20,0x25,0x30,0x2E
000039 6633
00003a 6320
00003b 006d
00003c 7053      	.DB  0x33,0x66,0x20,0x63,0x6D,0x0,0x53,0x70
00003d 6565
00003e 3a64
00003f 2520
000040 2e30      	.DB  0x65,0x65,0x64,0x3A,0x20,0x25,0x30,0x2E
000041 6631
000042 6b20
000043 2f6d
000044 0068      	.DB  0x31,0x66,0x20,0x6B,0x6D,0x2F,0x68,0x0
000045 624f
000046 656a
000047 7463
000048 4420      	.DB  0x4F,0x62,0x6A,0x65,0x63,0x74,0x20,0x44
000049 7465
00004a 6365
00004b 6974
00004c 6e6f      	.DB  0x65,0x74,0x65,0x63,0x74,0x69,0x6F,0x6E
E:\Power side-view mirror\code\List\mirror.asm(1113): warning: .cseg .db misalignment - padding zero byte
00004d 0000      	.DB  0x0
                 _0x2000003:
00004e c080      	.DB  0x80,0xC0
                 _0x2020000:
00004f 4e2d
000050 4e41
E:\Power side-view mirror\code\List\mirror.asm(1117): warning: .cseg .db misalignment - padding zero byte
000051 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
E:\Power side-view mirror\code\List\mirror.asm(1119): warning: .cseg .db misalignment - padding zero byte
000052 0001      	.DB  0x1
                 _0x20A0000:
000053 4e2d
000054 4e41
000055 4900
000056 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Power side-view mirror\code\List\mirror.asm(1122): warning: .cseg .db misalignment - padding zero byte
000057 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000058 0011      	.DW  0x11
000059 0300      	.DW  _0x25
00005a 008a      	.DW  _0x0*2+32
                 
00005b 0002      	.DW  0x02
00005c 0003      	.DW  0x03
00005d 0068      	.DW  _0x3B*2
                 
00005e 0002      	.DW  0x02
00005f 0315      	.DW  __base_y_G100
000060 009c      	.DW  _0x2000003*2
                 
000061 0001      	.DW  0x01
000062 0319      	.DW  __seed_G105
000063 00a4      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000064 0000      	.DW  0
                 
                 __RESET:
000065 94f8      	CLI
000066 27ee      	CLR  R30
000067 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000068 e0f1      	LDI  R31,1
000069 bff5      	OUT  MCUCR,R31
00006a bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00006b e1f8      	LDI  R31,0x18
00006c 95a8      	WDR
00006d b7a4      	IN   R26,MCUSR
00006e 7fa7      	CBR  R26,8
00006f bfa4      	OUT  MCUSR,R26
000070 93f0 0060 	STS  WDTCSR,R31
000072 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
000074 e08d      	LDI  R24,(14-2)+1
000075 e0a2      	LDI  R26,2
000076 27bb      	CLR  R27
                 __CLEAR_REG:
000077 93ed      	ST   X+,R30
000078 958a      	DEC  R24
000079 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007c e0a0      	LDI  R26,LOW(__SRAM_START)
00007d e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00007e 93ed      	ST   X+,R30
00007f 9701      	SBIW R24,1
000080 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000081 ebe0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000082 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000083 9185      	LPM  R24,Z+
000084 9195      	LPM  R25,Z+
000085 9700      	SBIW R24,0
000086 f061      	BREQ __GLOBAL_INI_END
000087 91a5      	LPM  R26,Z+
000088 91b5      	LPM  R27,Z+
000089 9005      	LPM  R0,Z+
00008a 9015      	LPM  R1,Z+
00008b 01bf      	MOVW R22,R30
00008c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008d 9005      	LPM  R0,Z+
00008e 920d      	ST   X+,R0
00008f 9701      	SBIW R24,1
000090 f7e1      	BRNE __GLOBAL_INI_LOOP
000091 01fb      	MOVW R30,R22
000092 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000093 e0e0      	LDI  R30,__GPIOR0_INIT
000094 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000095 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000096 bfed      	OUT  SPL,R30
000097 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000098 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000099 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009a e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009b 940c 015c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define openBtn 1023
                 ;#define closeBtn 731
                 ;#define leftBtn 539
                 ;#define rightBtn 394
                 ;#define upBtn 269
                 ;#define downBtn 146
                 ;#define OC_DDR DDRB.3
                 ;#define LR_DDR DDRD.3
                 ;#define UD_DDR DDRD.6
                 ;#define OC_PORT PORTB.3
                 ;#define LR_PORT PORTB.3
                 ;#define UD_PORT PORTB.6
                 ;#define TRIGGER_DDR DDRB.1
                 ;#define ECHO_DDR DDRB.0
                 ;#define TRIGGER_PORT PORTB.1
                 ;#define ECHO_PORT PORTB.0
                 ;#define ADC_VREF_TYPE 0x40
                 ;
                 ;float distance;
                 ;int timerOverFlow = 0;
                 ;char status;
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 001D {
                 
                 	.CSEG
                 _timer1_ovf_isr:
00009d 93ea      	ST   -Y,R30
00009e 93fa      	ST   -Y,R31
00009f b7ef      	IN   R30,SREG
0000a0 93ea      	ST   -Y,R30
                 ; 0000 001E     timerOverFlow++;
0000a1 e0e1      	LDI  R30,LOW(1)
0000a2 e0f0      	LDI  R31,HIGH(1)
                +
0000a3 0e3e     +ADD R3 , R30
0000a4 1e4f     +ADC R4 , R31
                 	__ADDWRR 3,4,30,31
                 ; 0000 001F }
0000a5 91e9      	LD   R30,Y+
0000a6 bfef      	OUT  SREG,R30
0000a7 91f9      	LD   R31,Y+
0000a8 91e9      	LD   R30,Y+
0000a9 9518      	RETI
                 ;
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0024 {
                 _read_adc:
                 ; 0000 0025 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
0000aa 81e8      	LD   R30,Y
0000ab 64e0      	ORI  R30,0x40
0000ac 93e0 007c 	STS  124,R30
                 ; 0000 0026 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0027 delay_us(10);
                +
0000ae e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000af 958a     +DEC R24
0000b0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0028 // Start the AD conversion
                 ; 0000 0029 ADCSRA|=0x40;
0000b1 91e0 007a 	LDS  R30,122
0000b3 64e0      	ORI  R30,0x40
0000b4 93e0 007a 	STS  122,R30
                 ; 0000 002A // Wait for the AD conversion to complete
                 ; 0000 002B while ((ADCSRA & 0x10)==0);
                 _0x3:
0000b6 91e0 007a 	LDS  R30,122
0000b8 71e0      	ANDI R30,LOW(0x10)
0000b9 f3e1      	BREQ _0x3
                 ; 0000 002C ADCSRA|=0x10;
0000ba 91e0 007a 	LDS  R30,122
0000bc 61e0      	ORI  R30,0x10
0000bd 93e0 007a 	STS  122,R30
                 ; 0000 002D return ADCW;
0000bf 91e0 0078 	LDS  R30,120
0000c1 91f0 0079 	LDS  R31,120+1
0000c3 940c 02cc 	JMP  _0x20C0006
                 ; 0000 002E }
                 ;
                 ;void activeDistantSensor()
                 ; 0000 0031 {
                 _activeDistantSensor:
                 ; 0000 0032     unsigned int duration;
                 ; 0000 0033     char buffer[16];
                 ; 0000 0034     //char buffer[];
                 ; 0000 0035     // Trigger generate pulse
                 ; 0000 0036     TRIGGER_PORT = 1;
0000c5 9760      	SBIW R28,16
0000c6 931a      	ST   -Y,R17
0000c7 930a      	ST   -Y,R16
                 ;	duration -> R16,R17
                 ;	buffer -> Y+2
0000c8 9a29      	SBI  0x5,1
                 ; 0000 0037     delay_ms(5);
0000c9 e0e5      	LDI  R30,LOW(5)
0000ca e0f0      	LDI  R31,HIGH(5)
0000cb 940e 0731 	CALL SUBOPT_0x0
                 ; 0000 0038     TRIGGER_PORT = 0;
0000cd 9829      	CBI  0x5,1
                 ; 0000 0039     // Delete timer1
                 ; 0000 003A     TCNT1H = 0;
0000ce 940e 0735 	CALL SUBOPT_0x1
                 ; 0000 003B     TCNT1L = 0;
                 ; 0000 003C     TCCR1B=0b01000001; // Catch rising edge mode
0000d0 e4e1      	LDI  R30,LOW(65)
0000d1 93e0 0081 	STS  129,R30
                 ; 0000 003D     TIFR1 = 0b00100001; // Delete input capture and overflow flag
0000d3 e2e1      	LDI  R30,LOW(33)
0000d4 bbe6      	OUT  0x16,R30
                 ; 0000 003E 
                 ; 0000 003F     // Compute pulse width
                 ; 0000 0040     while(TIFR1 & (1 << ICF1) == 0); // Waiting rising edge
                 _0xA:
0000d5 b3e6      	IN   R30,0x16
0000d6 70e0      	ANDI R30,LOW(0x0)
0000d7 f7e9      	BRNE _0xA
                 ; 0000 0041     // Delete timer1
                 ; 0000 0042     TCNT1H = 0;
0000d8 940e 0735 	CALL SUBOPT_0x1
                 ; 0000 0043     TCNT1L = 0;
                 ; 0000 0044     TCCR1B=0b00000001; // Catch falling edge mode
0000da e0e1      	LDI  R30,LOW(1)
0000db 93e0 0081 	STS  129,R30
                 ; 0000 0045     TIFR1 = 0b00100001; // Delete input capture and overflow flag
0000dd e2e1      	LDI  R30,LOW(33)
0000de bbe6      	OUT  0x16,R30
                 ; 0000 0046     timerOverFlow = 0; // Delete timer1 value
0000df 2433      	CLR  R3
0000e0 2444      	CLR  R4
                 ; 0000 0047 
                 ; 0000 0048     while(TIFR1 & (1 << ICF1) == 0); // Waiting falling edge
                 _0xD:
0000e1 b3e6      	IN   R30,0x16
0000e2 70e0      	ANDI R30,LOW(0x0)
0000e3 f7e9      	BRNE _0xD
                 ; 0000 0049     duration = (ICR1L + ICR1H*256) + (65535 * timerOverFlow);
0000e4 91e0 0086 	LDS  R30,134
0000e6 e0f0      	LDI  R31,0
0000e7 01df      	MOVW R26,R30
0000e8 91e0 0087 	LDS  R30,135
0000ea 2ffe      	MOV  R31,R30
0000eb e0e0      	LDI  R30,0
0000ec 0fea      	ADD  R30,R26
0000ed 1ffb      	ADC  R31,R27
0000ee 01bf      	MOVW R22,R30
                +
0000ef 2de3     +MOV R30 , R3
0000f0 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
0000f1 efaf      	LDI  R26,LOW(65535)
0000f2 efbf      	LDI  R27,HIGH(65535)
0000f3 940e 0a48 	CALL __MULW12U
0000f5 0fe6      	ADD  R30,R22
0000f6 1ff7      	ADC  R31,R23
0000f7 018f      	MOVW R16,R30
                 ; 0000 004A     distance = 1.0f*duration/466.47;
0000f8 01f8      	MOVW R30,R16
0000f9 940e 073b 	CALL SUBOPT_0x2
                +
0000fb e2e9     +LDI R30 , LOW ( 0x43E93C29 )
0000fc e3fc     +LDI R31 , HIGH ( 0x43E93C29 )
0000fd ee69     +LDI R22 , BYTE3 ( 0x43E93C29 )
0000fe e473     +LDI R23 , BYTE4 ( 0x43E93C29 )
                 	__GETD1N 0x43E93C29
0000ff 940e 09cc 	CALL __DIVF21
000101 93e0 0311 	STS  _distance,R30
000103 93f0 0312 	STS  _distance+1,R31
000105 9360 0313 	STS  _distance+2,R22
000107 9370 0314 	STS  _distance+3,R23
                 ; 0000 004B     sprintf(buffer, "Dis: %0.3f cm", distance);
000109 01fe      	MOVW R30,R28
00010a 9632      	ADIW R30,2
00010b 93fa      	ST   -Y,R31
00010c 93ea      	ST   -Y,R30
                +
00010d e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00010e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00010f 93fa      	ST   -Y,R31
000110 93ea      	ST   -Y,R30
000111 91e0 0311 	LDS  R30,_distance
000113 91f0 0312 	LDS  R31,_distance+1
000115 9160 0313 	LDS  R22,_distance+2
000117 9170 0314 	LDS  R23,_distance+3
000119 940e 0748 	CALL SUBOPT_0x3
                 ; 0000 004C     lcd_gotoxy(0,1);
00011b e0e1      	LDI  R30,LOW(1)
00011c 93ea      	ST   -Y,R30
00011d d13f      	RCALL _lcd_gotoxy
                 ; 0000 004D     lcd_puts(buffer);
00011e 01fe      	MOVW R30,R28
00011f 9632      	ADIW R30,2
000120 940e 0751 	CALL SUBOPT_0x4
                 ; 0000 004E }
000122 8119      	LDD  R17,Y+1
000123 8108      	LDD  R16,Y+0
000124 9662      	ADIW R28,18
000125 9508      	RET
                 ;
                 ;
                 ;// Open mirror
                 ;void open()
                 ; 0000 0053 {
                 _open:
                 ; 0000 0054     OCR2A = 20;
000126 e1e4      	LDI  R30,LOW(20)
000127 93e0 00b3 	STS  179,R30
                 ; 0000 0055     status = 'o'; // o is shorten of open
000129 e6ef      	LDI  R30,LOW(111)
00012a c007      	RJMP _0x20C0007
                 ; 0000 0056     delay_ms(1000);
                 ; 0000 0057 }
                 ;
                 ;// Close mirror
                 ;void close()
                 ; 0000 005B {
                 _close:
                 ; 0000 005C     OCR2A = 5;
00012b e0e5      	LDI  R30,LOW(5)
00012c 93e0 00b3 	STS  179,R30
                 ; 0000 005D     OCR0B = 15;
00012e e0ef      	LDI  R30,LOW(15)
00012f bde8      	OUT  0x28,R30
                 ; 0000 005E     OCR0A = 15;
000130 bde7      	OUT  0x27,R30
                 ; 0000 005F     status = 'c'; // c is shorten of close
000131 e6e3      	LDI  R30,LOW(99)
                 _0x20C0007:
000132 2e6e      	MOV  R6,R30
                 ; 0000 0060     delay_ms(1000);
000133 eee8      	LDI  R30,LOW(1000)
000134 e0f3      	LDI  R31,HIGH(1000)
000135 940e 0731 	CALL SUBOPT_0x0
                 ; 0000 0061 }
000137 9508      	RET
                 ;
                 ;// Adjust left
                 ;void adjustLeft()
                 ; 0000 0065 {
                 _adjustLeft:
                 ; 0000 0066     if(OCR2B > 10)
000138 91a0 00b4 	LDS  R26,180
00013a 30ab      	CPI  R26,LOW(0xB)
00013b f028      	BRLO _0x10
                 ; 0000 0067     {
                 ; 0000 0068         OCR2B--;
00013c eba4      	LDI  R26,LOW(180)
00013d e0b0      	LDI  R27,HIGH(180)
00013e 91ec      	LD   R30,X
00013f 50e1      	SUBI R30,LOW(1)
000140 93ec      	ST   X,R30
                 ; 0000 0069     }
                 ; 0000 006A }
                 _0x10:
000141 9508      	RET
                 ;
                 ;// Adjust right
                 ;void adjustRight()
                 ; 0000 006E {
                 _adjustRight:
                 ; 0000 006F     if(OCR2B < 19)
000142 91a0 00b4 	LDS  R26,180
000144 31a3      	CPI  R26,LOW(0x13)
000145 f428      	BRSH _0x11
                 ; 0000 0070     {
                 ; 0000 0071         OCR2B++;
000146 eba4      	LDI  R26,LOW(180)
000147 e0b0      	LDI  R27,HIGH(180)
000148 91ec      	LD   R30,X
000149 5fef      	SUBI R30,-LOW(1)
00014a 93ec      	ST   X,R30
                 ; 0000 0072     }
                 ; 0000 0073 }
                 _0x11:
00014b 9508      	RET
                 ;
                 ;// Adjust up
                 ;void adjustUp()
                 ; 0000 0077 {
                 _adjustUp:
                 ; 0000 0078     if(OCR0A < 19)
00014c b5e7      	IN   R30,0x27
00014d 31e3      	CPI  R30,LOW(0x13)
00014e f420      	BRSH _0x12
                 ; 0000 0079     {
                 ; 0000 007A         OCR0A++;
00014f b5e7      	IN   R30,0x27
000150 5fef      	SUBI R30,-LOW(1)
000151 bde7      	OUT  0x27,R30
000152 50e1      	SUBI R30,LOW(1)
                 ; 0000 007B     }
                 ; 0000 007C }
                 _0x12:
000153 9508      	RET
                 ;
                 ;// Adjust down
                 ;void adjustDown()
                 ; 0000 0080 {
                 _adjustDown:
                 ; 0000 0081     if(OCR0A > 10)
000154 b5e7      	IN   R30,0x27
000155 30eb      	CPI  R30,LOW(0xB)
000156 f020      	BRLO _0x13
                 ; 0000 0082     {
                 ; 0000 0083         OCR0A--;
000157 b5e7      	IN   R30,0x27
000158 50e1      	SUBI R30,LOW(1)
000159 bde7      	OUT  0x27,R30
00015a 5fef      	SUBI R30,-LOW(1)
                 ; 0000 0084     }
                 ; 0000 0085 }
                 _0x13:
00015b 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 0088 {
                 _main:
                 ; 0000 0089 unsigned int curBtn;
                 ; 0000 008A float vehicleSpeed;
                 ; 0000 008B unsigned char dis[16];
                 ; 0000 008C 
                 ; 0000 008D // Crystal Oscillator division factor: 1
                 ; 0000 008E #pragma optsize-
                 ; 0000 008F CLKPR=0x80;
00015c 9764      	SBIW R28,20
                 ;	curBtn -> R16,R17
                 ;	vehicleSpeed -> Y+16
                 ;	dis -> Y+0
00015d e8e0      	LDI  R30,LOW(128)
00015e 93e0 0061 	STS  97,R30
                 ; 0000 0090 CLKPR=0x00;
000160 e0e0      	LDI  R30,LOW(0)
000161 93e0 0061 	STS  97,R30
                 ; 0000 0091 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0092 #pragma optsize+
                 ; 0000 0093 #endif
                 ; 0000 0094 
                 ; 0000 0095 // Timer/Counter 0 initialization
                 ; 0000 0096 TCCR0A=0b10000011;
000163 e8e3      	LDI  R30,LOW(131)
000164 bde4      	OUT  0x24,R30
                 ; 0000 0097 TCCR0B=0b00000101;
000165 e0e5      	LDI  R30,LOW(5)
000166 bde5      	OUT  0x25,R30
                 ; 0000 0098 TCNT0=0;
000167 e0e0      	LDI  R30,LOW(0)
000168 bde6      	OUT  0x26,R30
                 ; 0000 0099 OCR0A=15;
000169 e0ef      	LDI  R30,LOW(15)
00016a bde7      	OUT  0x27,R30
                 ; 0000 009A OCR0B=0;
00016b e0e0      	LDI  R30,LOW(0)
00016c bde8      	OUT  0x28,R30
                 ; 0000 009B 
                 ; 0000 009C // Timer/Counter 2 initialization
                 ; 0000 009D TCCR2A=0b10100011;
00016d eae3      	LDI  R30,LOW(163)
00016e 93e0 00b0 	STS  176,R30
                 ; 0000 009E TCCR2B=0b00000111;
000170 e0e7      	LDI  R30,LOW(7)
000171 93e0 00b1 	STS  177,R30
                 ; 0000 009F TCNT2=0;
000173 e0e0      	LDI  R30,LOW(0)
000174 93e0 00b2 	STS  178,R30
                 ; 0000 00A0 OCR2A=0;
000176 93e0 00b3 	STS  179,R30
                 ; 0000 00A1 OCR2B=15;
000178 e0ef      	LDI  R30,LOW(15)
000179 93e0 00b4 	STS  180,R30
                 ; 0000 00A2 
                 ; 0000 00A3 // Timer/Counter 1 initialization
                 ; 0000 00A4 TCCR1A=0x00; // Normal mode
00017b e0e0      	LDI  R30,LOW(0)
00017c 93e0 0080 	STS  128,R30
                 ; 0000 00A5 TIMSK1=0b00000001; // Allow interrupt when timer1 overflow
00017e e0e1      	LDI  R30,LOW(1)
00017f 93e0 006f 	STS  111,R30
                 ; 0000 00A6 
                 ; 0000 00A7 // ADC initialization
                 ; 0000 00A8 DIDR0=0x21;
000181 e2e1      	LDI  R30,LOW(33)
000182 93e0 007e 	STS  126,R30
                 ; 0000 00A9 ADMUX=ADC_VREF_TYPE & 0xff;
000184 e4e0      	LDI  R30,LOW(64)
000185 93e0 007c 	STS  124,R30
                 ; 0000 00AA ADCSRA=0x84;
000187 e8e4      	LDI  R30,LOW(132)
000188 93e0 007a 	STS  122,R30
                 ; 0000 00AB 
                 ; 0000 00AC // Characters/line: 16
                 ; 0000 00AD lcd_init(16);
00018a e1e0      	LDI  R30,LOW(16)
00018b 93ea      	ST   -Y,R30
00018c d10e      	RCALL _lcd_init
                 ; 0000 00AE 
                 ; 0000 00AF //Set up PWM Servo ports is output
                 ; 0000 00B0 OC_DDR = 1;
00018d 9a23      	SBI  0x4,3
                 ; 0000 00B1 LR_DDR = 1;
00018e 9a53      	SBI  0xA,3
                 ; 0000 00B2 UD_DDR = 1;
00018f 9a56      	SBI  0xA,6
                 ; 0000 00B3 
                 ; 0000 00B4 // Set up Trigger and Echo for Sensor
                 ; 0000 00B5 TRIGGER_DDR = 1; // Trigger port is output
000190 9a21      	SBI  0x4,1
                 ; 0000 00B6 ECHO_DDR = 0; // Echo port is input
000191 9820      	CBI  0x4,0
                 ; 0000 00B7 
                 ; 0000 00B8 #asm("sei")
000192 9478      	sei
                 ; 0000 00B9 
                 ; 0000 00BA while (1)
                 _0x1E:
                 ; 0000 00BB       {
                 ; 0000 00BC         lcd_clear();
000193 d0d6      	RCALL _lcd_clear
                 ; 0000 00BD         curBtn = read_adc(5); // Read the button that drivers pressed
000194 e0e5      	LDI  R30,LOW(5)
000195 93ea      	ST   -Y,R30
000196 df13      	RCALL _read_adc
000197 018f      	MOVW R16,R30
                 ; 0000 00BE         vehicleSpeed = 1.0f*read_adc(0)/10;
000198 e0e0      	LDI  R30,LOW(0)
000199 93ea      	ST   -Y,R30
00019a df0f      	RCALL _read_adc
00019b 940e 073b 	CALL SUBOPT_0x2
00019d 940e 0755 	CALL SUBOPT_0x5
00019f 940e 09cc 	CALL __DIVF21
0001a1 940e 075a 	CALL SUBOPT_0x6
                 ; 0000 00BF         sprintf(dis, "Speed: %0.1f km/h", vehicleSpeed);
0001a3 01fe      	MOVW R30,R28
0001a4 93fa      	ST   -Y,R31
0001a5 93ea      	ST   -Y,R30
                +
0001a6 e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
0001a7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
0001a8 93fa      	ST   -Y,R31
0001a9 93ea      	ST   -Y,R30
                +
0001aa 89ec     +LDD R30 , Y + 20
0001ab 89fd     +LDD R31 , Y + 20 + 1
0001ac 896e     +LDD R22 , Y + 20 + 2
0001ad 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
0001ae 940e 0748 	CALL SUBOPT_0x3
                 ; 0000 00C0         lcd_gotoxy(0,0);
0001b0 e0e0      	LDI  R30,LOW(0)
0001b1 93ea      	ST   -Y,R30
0001b2 d0aa      	RCALL _lcd_gotoxy
                 ; 0000 00C1         lcd_puts(dis);
0001b3 01fe      	MOVW R30,R28
0001b4 940e 0751 	CALL SUBOPT_0x4
                 ; 0000 00C2 
                 ; 0000 00C3         /*when mirror is opening, distant sensor is actived.
                 ; 0000 00C4         Mirror will automatically be closed if distance less than 40 cm but vehicle still running (speed > 0)*/
                 ; 0000 00C5         if(status == 'o')
0001b6 e6ef      	LDI  R30,LOW(111)
0001b7 15e6      	CP   R30,R6
0001b8 f571      	BRNE _0x21
                 ; 0000 00C6         {
                 ; 0000 00C7             activeDistantSensor();
0001b9 940e 075f 	CALL SUBOPT_0x7
                 ; 0000 00C8             if(distance < 100 && vehicleSpeed > 0)
                +
0001bb e0e0     +LDI R30 , LOW ( 0x42C80000 )
0001bc e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0001bd ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0001be e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0001bf 940e 0a11 	CALL __CMPF12
0001c1 f428      	BRSH _0x23
0001c2 940e 076a 	CALL SUBOPT_0x8
0001c4 940e 0ace 	CALL __CPD02
0001c6 f00c      	BRLT _0x24
                 _0x23:
0001c7 c009      	RJMP _0x22
                 _0x24:
                 ; 0000 00C9             {
                 ; 0000 00CA                 lcd_gotoxy(0,1);
0001c8 e0e0      	LDI  R30,LOW(0)
0001c9 93ea      	ST   -Y,R30
0001ca e0e1      	LDI  R30,LOW(1)
0001cb 93ea      	ST   -Y,R30
0001cc d090      	RCALL _lcd_gotoxy
                 ; 0000 00CB                 lcd_puts("Object Detection");
                +
0001cd e0e0     +LDI R30 , LOW ( _0x25 + ( 0 ) )
0001ce e0f3     +LDI R31 , HIGH ( _0x25 + ( 0 ) )
                 	__POINTW1MN _0x25,0
0001cf 940e 0751 	CALL SUBOPT_0x4
                 ; 0000 00CC             }
                 ; 0000 00CD             if(distance < 40 && vehicleSpeed > 20)
                 _0x22:
0001d1 91a0 0311 	LDS  R26,_distance
0001d3 91b0 0312 	LDS  R27,_distance+1
0001d5 9180 0313 	LDS  R24,_distance+2
0001d7 9190 0314 	LDS  R25,_distance+3
0001d9 940e 076f 	CALL SUBOPT_0x9
0001db f438      	BRSH _0x27
0001dc 940e 0776 	CALL SUBOPT_0xA
0001de f009      	BREQ PC+2
0001df f410      	BRCC PC+3
0001e0 940c 01e3 	JMP  _0x27
0001e2 c001      	RJMP _0x28
                 _0x27:
0001e3 c003      	RJMP _0x26
                 _0x28:
                 ; 0000 00CE             {
                 ; 0000 00CF                 close();
0001e4 df46      	RCALL _close
                 ; 0000 00D0                 status = 'a'; // a is shorten of automatic close. This help distinguish between automatic closing and active closing.
0001e5 e6e1      	LDI  R30,LOW(97)
0001e6 2e6e      	MOV  R6,R30
                 ; 0000 00D1             }
                 ; 0000 00D2         }
                 _0x26:
                 ; 0000 00D3 
                 ; 0000 00D4         /*when the object in front of mirror overcame, vehicle is still running, mirror is opened again*/
                 ; 0000 00D5         if(status == 'a' && vehicleSpeed > 0)
                 _0x21:
0001e7 e6e1      	LDI  R30,LOW(97)
0001e8 15e6      	CP   R30,R6
0001e9 f429      	BRNE _0x2A
0001ea 940e 076a 	CALL SUBOPT_0x8
0001ec 940e 0ace 	CALL __CPD02
0001ee f00c      	BRLT _0x2B
                 _0x2A:
0001ef c00d      	RJMP _0x29
                 _0x2B:
                 ; 0000 00D6         {
                 ; 0000 00D7             activeDistantSensor();
0001f0 940e 075f 	CALL SUBOPT_0x7
                 ; 0000 00D8             if(distance >= 40 || vehicleSpeed <= 20)
0001f2 940e 076f 	CALL SUBOPT_0x9
0001f4 f438      	BRSH _0x2D
0001f5 940e 0776 	CALL SUBOPT_0xA
0001f7 f009      	BREQ PC+2
0001f8 f410      	BRCC PC+3
0001f9 940c 01fc 	JMP  _0x2D
0001fb c001      	RJMP _0x2C
                 _0x2D:
                 ; 0000 00D9             {
                 ; 0000 00DA                 open();
0001fc df29      	RCALL _open
                 ; 0000 00DB             }
                 ; 0000 00DC         }
                 _0x2C:
                 ; 0000 00DD 
                 ; 0000 00DE         // Adjust mirror
                 ; 0000 00DF         if(curBtn == openBtn)
                 _0x29:
0001fd efef      	LDI  R30,LOW(1023)
0001fe e0f3      	LDI  R31,HIGH(1023)
0001ff 17e0      	CP   R30,R16
000200 07f1      	CPC  R31,R17
000201 f411      	BRNE _0x2F
                 ; 0000 00E0         {
                 ; 0000 00E1             open();
000202 df23      	RCALL _open
                 ; 0000 00E2         }
                 ; 0000 00E3         else if(curBtn == closeBtn)
000203 c022      	RJMP _0x30
                 _0x2F:
000204 edeb      	LDI  R30,LOW(731)
000205 e0f2      	LDI  R31,HIGH(731)
000206 17e0      	CP   R30,R16
000207 07f1      	CPC  R31,R17
000208 f411      	BRNE _0x31
                 ; 0000 00E4         {
                 ; 0000 00E5             close();
000209 df21      	RCALL _close
                 ; 0000 00E6         }
                 ; 0000 00E7         else if(curBtn == leftBtn)
00020a c01b      	RJMP _0x32
                 _0x31:
00020b e1eb      	LDI  R30,LOW(539)
00020c e0f2      	LDI  R31,HIGH(539)
00020d 17e0      	CP   R30,R16
00020e 07f1      	CPC  R31,R17
00020f f411      	BRNE _0x33
                 ; 0000 00E8         {
                 ; 0000 00E9             adjustLeft();
000210 df27      	RCALL _adjustLeft
                 ; 0000 00EA         }
                 ; 0000 00EB         else if(curBtn == rightBtn)
000211 c014      	RJMP _0x34
                 _0x33:
000212 e8ea      	LDI  R30,LOW(394)
000213 e0f1      	LDI  R31,HIGH(394)
000214 17e0      	CP   R30,R16
000215 07f1      	CPC  R31,R17
000216 f411      	BRNE _0x35
                 ; 0000 00EC         {
                 ; 0000 00ED             adjustRight();
000217 df2a      	RCALL _adjustRight
                 ; 0000 00EE         }
                 ; 0000 00EF         else if(curBtn == upBtn)
000218 c00d      	RJMP _0x36
                 _0x35:
000219 e0ed      	LDI  R30,LOW(269)
00021a e0f1      	LDI  R31,HIGH(269)
00021b 17e0      	CP   R30,R16
00021c 07f1      	CPC  R31,R17
00021d f411      	BRNE _0x37
                 ; 0000 00F0         {
                 ; 0000 00F1             adjustUp();
00021e df2d      	RCALL _adjustUp
                 ; 0000 00F2         }
                 ; 0000 00F3         else if(curBtn == downBtn)
00021f c006      	RJMP _0x38
                 _0x37:
000220 e9e2      	LDI  R30,LOW(146)
000221 e0f0      	LDI  R31,HIGH(146)
000222 17e0      	CP   R30,R16
000223 07f1      	CPC  R31,R17
000224 f409      	BRNE _0x39
                 ; 0000 00F4         {
                 ; 0000 00F5             adjustDown();
000225 df2e      	RCALL _adjustDown
                 ; 0000 00F6         }
                 ; 0000 00F7 
                 ; 0000 00F8         delay_ms(200);
                 _0x39:
                 _0x38:
                 _0x36:
                 _0x34:
                 _0x32:
                 _0x30:
000226 ece8      	LDI  R30,LOW(200)
000227 e0f0      	LDI  R31,HIGH(200)
000228 940e 0731 	CALL SUBOPT_0x0
                 ; 0000 00F9       }
00022a cf68      	RJMP _0x1E
                 ; 0000 00FA }
                 _0x3A:
00022b cfff      	RJMP _0x3A
                 
                 	.DSEG
                 _0x25:
000300           	.BYTE 0x11
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
00022c 81e8      	LD   R30,Y
00022d 71e0      	ANDI R30,LOW(0x10)
00022e f011      	BREQ _0x2000004
00022f 9a2c      	SBI  0x5,4
000230 c001      	RJMP _0x2000005
                 _0x2000004:
000231 982c      	CBI  0x5,4
                 _0x2000005:
000232 81e8      	LD   R30,Y
000233 72e0      	ANDI R30,LOW(0x20)
000234 f011      	BREQ _0x2000006
000235 9a2d      	SBI  0x5,5
000236 c001      	RJMP _0x2000007
                 _0x2000006:
000237 982d      	CBI  0x5,5
                 _0x2000007:
000238 81e8      	LD   R30,Y
000239 74e0      	ANDI R30,LOW(0x40)
00023a f011      	BREQ _0x2000008
00023b 9a2e      	SBI  0x5,6
00023c c001      	RJMP _0x2000009
                 _0x2000008:
00023d 982e      	CBI  0x5,6
                 _0x2000009:
00023e 81e8      	LD   R30,Y
00023f 78e0      	ANDI R30,LOW(0x80)
000240 f011      	BREQ _0x200000A
000241 9a2f      	SBI  0x5,7
000242 c001      	RJMP _0x200000B
                 _0x200000A:
000243 982f      	CBI  0x5,7
                 _0x200000B:
                +
000244 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000245 958a     +DEC R24
000246 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000247 9a5a      	SBI  0xB,2
                +
000248 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000249 958a     +DEC R24
00024a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00024b 985a      	CBI  0xB,2
                +
00024c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00024d 958a     +DEC R24
00024e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00024f c07c      	RJMP _0x20C0006
                 __lcd_write_data:
000250 81e8      	LD   R30,Y
000251 93ea      	ST   -Y,R30
000252 dfd9      	RCALL __lcd_write_nibble_G100
000253 81e8          ld    r30,y
000254 95e2          swap  r30
000255 83e8          st    y,r30
000256 81e8      	LD   R30,Y
000257 93ea      	ST   -Y,R30
000258 dfd3      	RCALL __lcd_write_nibble_G100
                +
000259 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00025a 958a     +DEC R24
00025b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00025c c06f      	RJMP _0x20C0006
                 _lcd_gotoxy:
00025d 81e8      	LD   R30,Y
00025e e0f0      	LDI  R31,0
00025f 5eeb      	SUBI R30,LOW(-__base_y_G100)
000260 4ffc      	SBCI R31,HIGH(-__base_y_G100)
000261 81e0      	LD   R30,Z
000262 81a9      	LDD  R26,Y+1
000263 0fea      	ADD  R30,R26
000264 93ea      	ST   -Y,R30
000265 dfea      	RCALL __lcd_write_data
000266 8059      	LDD  R5,Y+1
000267 8088      	LDD  R8,Y+0
000268 9622      	ADIW R28,2
000269 9508      	RET
                 _lcd_clear:
00026a e0e2      	LDI  R30,LOW(2)
00026b 940e 077e 	CALL SUBOPT_0xB
00026d e0ec      	LDI  R30,LOW(12)
00026e 93ea      	ST   -Y,R30
00026f dfe0      	RCALL __lcd_write_data
000270 e0e1      	LDI  R30,LOW(1)
000271 940e 077e 	CALL SUBOPT_0xB
000273 e0e0      	LDI  R30,LOW(0)
000274 2e8e      	MOV  R8,R30
000275 2e5e      	MOV  R5,R30
000276 9508      	RET
                 _lcd_putchar:
000277 81a8      	LD   R26,Y
000278 30aa      	CPI  R26,LOW(0xA)
000279 f011      	BREQ _0x2000011
00027a 1457      	CP   R5,R7
00027b f048      	BRLO _0x2000010
                 _0x2000011:
00027c e0e0      	LDI  R30,LOW(0)
00027d 93ea      	ST   -Y,R30
00027e 9483      	INC  R8
00027f 928a      	ST   -Y,R8
000280 dfdc      	RCALL _lcd_gotoxy
000281 81a8      	LD   R26,Y
000282 30aa      	CPI  R26,LOW(0xA)
000283 f409      	BRNE _0x2000013
000284 c047      	RJMP _0x20C0006
                 _0x2000013:
                 _0x2000010:
000285 9453      	INC  R5
000286 9a58      	SBI  0xB,0
000287 81e8      	LD   R30,Y
000288 93ea      	ST   -Y,R30
000289 dfc6      	RCALL __lcd_write_data
00028a 9858      	CBI  0xB,0
00028b c040      	RJMP _0x20C0006
                 _lcd_puts:
00028c 931a      	ST   -Y,R17
                 _0x2000014:
00028d 81a9      	LDD  R26,Y+1
00028e 81ba      	LDD  R27,Y+1+1
00028f 91ed      	LD   R30,X+
000290 83a9      	STD  Y+1,R26
000291 83ba      	STD  Y+1+1,R27
000292 2f1e      	MOV  R17,R30
000293 30e0      	CPI  R30,0
000294 f019      	BREQ _0x2000016
000295 931a      	ST   -Y,R17
000296 dfe0      	RCALL _lcd_putchar
000297 cff5      	RJMP _0x2000014
                 _0x2000016:
000298 8118      	LDD  R17,Y+0
000299 9623      	ADIW R28,3
00029a 9508      	RET
                 _lcd_init:
00029b 9a24      	SBI  0x4,4
00029c 9a25      	SBI  0x4,5
00029d 9a26      	SBI  0x4,6
00029e 9a27      	SBI  0x4,7
00029f 9a52      	SBI  0xA,2
0002a0 9a50      	SBI  0xA,0
0002a1 9a51      	SBI  0xA,1
0002a2 985a      	CBI  0xB,2
0002a3 9858      	CBI  0xB,0
0002a4 9859      	CBI  0xB,1
0002a5 8078      	LDD  R7,Y+0
0002a6 81e8      	LD   R30,Y
0002a7 58e0      	SUBI R30,-LOW(128)
                +
0002a8 93e0 0317+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0002aa 81e8      	LD   R30,Y
0002ab 54e0      	SUBI R30,-LOW(192)
                +
0002ac 93e0 0318+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0002ae e1e4      	LDI  R30,LOW(20)
0002af e0f0      	LDI  R31,HIGH(20)
0002b0 940e 0731 	CALL SUBOPT_0x0
0002b2 940e 0784 	CALL SUBOPT_0xC
0002b4 940e 0784 	CALL SUBOPT_0xC
0002b6 940e 0784 	CALL SUBOPT_0xC
0002b8 e2e0      	LDI  R30,LOW(32)
0002b9 93ea      	ST   -Y,R30
0002ba df71      	RCALL __lcd_write_nibble_G100
                +
0002bb ec88     +LDI R24 , LOW ( 200 )
0002bc e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002bd 9701     +SBIW R24 , 1
0002be f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002bf e2e8      	LDI  R30,LOW(40)
0002c0 93ea      	ST   -Y,R30
0002c1 df8e      	RCALL __lcd_write_data
0002c2 e0e4      	LDI  R30,LOW(4)
0002c3 93ea      	ST   -Y,R30
0002c4 df8b      	RCALL __lcd_write_data
0002c5 e8e5      	LDI  R30,LOW(133)
0002c6 93ea      	ST   -Y,R30
0002c7 df88      	RCALL __lcd_write_data
0002c8 e0e6      	LDI  R30,LOW(6)
0002c9 93ea      	ST   -Y,R30
0002ca df85      	RCALL __lcd_write_data
0002cb df9e      	RCALL _lcd_clear
                 _0x20C0006:
0002cc 9621      	ADIW R28,1
0002cd 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
0002ce 931a      	ST   -Y,R17
0002cf 930a      	ST   -Y,R16
0002d0 81aa      	LDD  R26,Y+2
0002d1 81bb      	LDD  R27,Y+2+1
0002d2 9612      	ADIW R26,2
0002d3 940e 0aa4 	CALL __GETW1P
0002d5 9730      	SBIW R30,0
0002d6 f129      	BREQ _0x2020016
0002d7 81aa      	LDD  R26,Y+2
0002d8 81bb      	LDD  R27,Y+2+1
0002d9 9614      	ADIW R26,4
0002da 940e 0aa4 	CALL __GETW1P
0002dc 018f      	MOVW R16,R30
0002dd 9730      	SBIW R30,0
0002de f061      	BREQ _0x2020018
                +
0002df 3002     +CPI R16 , LOW ( 2 )
0002e0 e0e0     +LDI R30 , HIGH ( 2 )
0002e1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0002e2 f0c0      	BRLO _0x2020019
0002e3 01f8      	MOVW R30,R16
0002e4 9731      	SBIW R30,1
0002e5 018f      	MOVW R16,R30
                +
0002e6 81aa     +LDD R26 , Y + 2
0002e7 81bb     +LDD R27 , Y + 2 + 1
0002e8 9614     +ADIW R26 , 4
0002e9 93ed     +ST X + , R30
0002ea 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020018:
0002eb 81aa      	LDD  R26,Y+2
0002ec 81bb      	LDD  R27,Y+2+1
0002ed 9612      	ADIW R26,2
0002ee 940e 078d 	CALL SUBOPT_0xD
0002f0 9731      	SBIW R30,1
0002f1 81ac      	LDD  R26,Y+4
0002f2 83a0      	STD  Z+0,R26
0002f3 81aa      	LDD  R26,Y+2
0002f4 81bb      	LDD  R27,Y+2+1
0002f5 940e 0aa4 	CALL __GETW1P
0002f7 23ff      	TST  R31
0002f8 f012      	BRMI _0x202001A
0002f9 940e 078d 	CALL SUBOPT_0xD
                 _0x202001A:
                 _0x2020019:
0002fb c006      	RJMP _0x202001B
                 _0x2020016:
0002fc 81aa      	LDD  R26,Y+2
0002fd 81bb      	LDD  R27,Y+2+1
0002fe efef      	LDI  R30,LOW(65535)
0002ff efff      	LDI  R31,HIGH(65535)
000300 93ed      	ST   X+,R30
000301 93fc      	ST   X,R31
                 _0x202001B:
000302 8119      	LDD  R17,Y+1
000303 8108      	LDD  R16,Y+0
000304 9625      	ADIW R28,5
000305 9508      	RET
                 __ftoe_G101:
000306 9724      	SBIW R28,4
000307 e0e0      	LDI  R30,LOW(0)
000308 83e8      	ST   Y,R30
000309 83e9      	STD  Y+1,R30
00030a e8e0      	LDI  R30,LOW(128)
00030b 83ea      	STD  Y+2,R30
00030c e3ef      	LDI  R30,LOW(63)
00030d 83eb      	STD  Y+3,R30
00030e 940e 0ad6 	CALL __SAVELOCR4
000310 85ee      	LDD  R30,Y+14
000311 85ff      	LDD  R31,Y+14+1
000312 3fef      	CPI  R30,LOW(0xFFFF)
000313 efaf      	LDI  R26,HIGH(0xFFFF)
000314 07fa      	CPC  R31,R26
000315 f449      	BRNE _0x202001F
000316 85e8      	LDD  R30,Y+8
000317 85f9      	LDD  R31,Y+8+1
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
                +
00031a e9ee     +LDI R30 , LOW ( 2 * _0x2020000 + ( 0 ) )
00031b e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW1FN _0x2020000,0
00031c 940e 0793 	CALL SUBOPT_0xE
00031e c0b8      	RJMP _0x20C0005
                 _0x202001F:
00031f 3fef      	CPI  R30,LOW(0x7FFF)
000320 e7af      	LDI  R26,HIGH(0x7FFF)
000321 07fa      	CPC  R31,R26
000322 f449      	BRNE _0x202001E
000323 85e8      	LDD  R30,Y+8
000324 85f9      	LDD  R31,Y+8+1
000325 93fa      	ST   -Y,R31
000326 93ea      	ST   -Y,R30
                +
000327 e9ef     +LDI R30 , LOW ( 2 * _0x2020000 + ( 1 ) )
000328 e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW1FN _0x2020000,1
000329 940e 0793 	CALL SUBOPT_0xE
00032b c0ab      	RJMP _0x20C0005
                 _0x202001E:
00032c 85ab      	LDD  R26,Y+11
00032d 30a7      	CPI  R26,LOW(0x7)
00032e f010      	BRLO _0x2020021
00032f e0e6      	LDI  R30,LOW(6)
000330 87eb      	STD  Y+11,R30
                 _0x2020021:
000331 851b      	LDD  R17,Y+11
                 _0x2020022:
000332 2fe1      	MOV  R30,R17
000333 5011      	SUBI R17,1
000334 30e0      	CPI  R30,0
000335 f019      	BREQ _0x2020024
000336 940e 0797 	CALL SUBOPT_0xF
000338 cff9      	RJMP _0x2020022
                 _0x2020024:
                +
000339 85ec     +LDD R30 , Y + 12
00033a 85fd     +LDD R31 , Y + 12 + 1
00033b 856e     +LDD R22 , Y + 12 + 2
00033c 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00033d 940e 0aca 	CALL __CPD10
00033f f421      	BRNE _0x2020025
000340 e030      	LDI  R19,LOW(0)
000341 940e 0797 	CALL SUBOPT_0xF
000343 c02e      	RJMP _0x2020026
                 _0x2020025:
000344 853b      	LDD  R19,Y+11
000345 940e 07a3 	CALL SUBOPT_0x10
000347 f009      	BREQ PC+2
000348 f410      	BRCC PC+3
000349 940c 0356 	JMP  _0x2020027
00034b 940e 0797 	CALL SUBOPT_0xF
                 _0x2020028:
00034d 940e 07a3 	CALL SUBOPT_0x10
00034f f028      	BRLO _0x202002A
000350 940e 07ae 	CALL SUBOPT_0x11
000352 940e 07b3 	CALL SUBOPT_0x12
000354 cff8      	RJMP _0x2020028
                 _0x202002A:
000355 c00d      	RJMP _0x202002B
                 _0x2020027:
                 _0x202002C:
000356 940e 07a3 	CALL SUBOPT_0x10
000358 f440      	BRSH _0x202002E
000359 940e 07ae 	CALL SUBOPT_0x11
00035b 940e 07bf 	CALL SUBOPT_0x13
00035d 940e 07c3 	CALL SUBOPT_0x14
00035f 5031      	SUBI R19,LOW(1)
000360 cff5      	RJMP _0x202002C
                 _0x202002E:
000361 940e 0797 	CALL SUBOPT_0xF
                 _0x202002B:
                +
000363 85ec     +LDD R30 , Y + 12
000364 85fd     +LDD R31 , Y + 12 + 1
000365 856e     +LDD R22 , Y + 12 + 2
000366 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000367 940e 07c8 	CALL SUBOPT_0x15
000369 940e 07c3 	CALL SUBOPT_0x14
00036b 940e 07a3 	CALL SUBOPT_0x10
00036d f020      	BRLO _0x202002F
00036e 940e 07ae 	CALL SUBOPT_0x11
000370 940e 07b3 	CALL SUBOPT_0x12
                 _0x202002F:
                 _0x2020026:
000372 e010      	LDI  R17,LOW(0)
                 _0x2020030:
000373 85eb      	LDD  R30,Y+11
000374 17e1      	CP   R30,R17
000375 f1a8      	BRLO _0x2020032
                +
000376 81ac     +LDD R26 , Y + 4
000377 81bd     +LDD R27 , Y + 4 + 1
000378 818e     +LDD R24 , Y + 4 + 2
000379 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00037a 940e 07cf 	CALL SUBOPT_0x16
00037c 940e 07c8 	CALL SUBOPT_0x15
00037e 940e 0ab8 	CALL __PUTPARD1
000380 940e 067a 	CALL _floor
                +
000382 83ec     +STD Y + 4 , R30
000383 83fd     +STD Y + 4 + 1 , R31
000384 836e     +STD Y + 4 + 2 , R22
000385 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000386 940e 07ae 	CALL SUBOPT_0x11
000388 940e 09cc 	CALL __DIVF21
00038a 940e 08bb 	CALL __CFD1U
00038c 2f0e      	MOV  R16,R30
00038d 940e 07d6 	CALL SUBOPT_0x17
00038f 940e 07dd 	CALL SUBOPT_0x18
000391 27ff      	CLR  R31
000392 2766      	CLR  R22
000393 2777      	CLR  R23
000394 940e 08f4 	CALL __CDF1
                +
000396 81ac     +LDD R26 , Y + 4
000397 81bd     +LDD R27 , Y + 4 + 1
000398 818e     +LDD R24 , Y + 4 + 2
000399 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00039a 940e 097e 	CALL __MULF12
00039c 940e 07ae 	CALL SUBOPT_0x11
00039e 940e 07e2 	CALL SUBOPT_0x19
0003a0 940e 07c3 	CALL SUBOPT_0x14
0003a2 2fe1      	MOV  R30,R17
0003a3 5f1f      	SUBI R17,-1
0003a4 30e0      	CPI  R30,0
0003a5 f669      	BRNE _0x2020030
0003a6 940e 07d6 	CALL SUBOPT_0x17
0003a8 e2ee      	LDI  R30,LOW(46)
0003a9 93ec      	ST   X,R30
0003aa cfc8      	RJMP _0x2020030
                 _0x2020032:
0003ab 940e 07e7 	CALL SUBOPT_0x1A
0003ad 9731      	SBIW R30,1
0003ae 85aa      	LDD  R26,Y+10
0003af 83a0      	STD  Z+0,R26
0003b0 3030      	CPI  R19,0
0003b1 f42c      	BRGE _0x2020034
0003b2 9531      	NEG  R19
0003b3 85a8      	LDD  R26,Y+8
0003b4 85b9      	LDD  R27,Y+8+1
0003b5 e2ed      	LDI  R30,LOW(45)
0003b6 c003      	RJMP _0x2020114
                 _0x2020034:
0003b7 85a8      	LDD  R26,Y+8
0003b8 85b9      	LDD  R27,Y+8+1
0003b9 e2eb      	LDI  R30,LOW(43)
                 _0x2020114:
0003ba 93ec      	ST   X,R30
0003bb 940e 07e7 	CALL SUBOPT_0x1A
0003bd 940e 07e7 	CALL SUBOPT_0x1A
0003bf 9731      	SBIW R30,1
0003c0 01bf      	MOVW R22,R30
0003c1 2fa3      	MOV  R26,R19
0003c2 e0ea      	LDI  R30,LOW(10)
0003c3 940e 0a5e 	CALL __DIVB21
0003c5 5de0      	SUBI R30,-LOW(48)
0003c6 01db      	MOVW R26,R22
0003c7 93ec      	ST   X,R30
0003c8 940e 07e7 	CALL SUBOPT_0x1A
0003ca 9731      	SBIW R30,1
0003cb 01bf      	MOVW R22,R30
0003cc 2fa3      	MOV  R26,R19
0003cd e0ea      	LDI  R30,LOW(10)
0003ce 940e 0a88 	CALL __MODB21
0003d0 5de0      	SUBI R30,-LOW(48)
0003d1 01db      	MOVW R26,R22
0003d2 93ec      	ST   X,R30
0003d3 85a8      	LDD  R26,Y+8
0003d4 85b9      	LDD  R27,Y+8+1
0003d5 e0e0      	LDI  R30,LOW(0)
0003d6 93ec      	ST   X,R30
                 _0x20C0005:
0003d7 940e 0add 	CALL __LOADLOCR4
0003d9 9660      	ADIW R28,16
0003da 9508      	RET
                 __print_G101:
0003db 97ef      	SBIW R28,63
0003dc 9761      	SBIW R28,17
0003dd 940e 0ad4 	CALL __SAVELOCR6
0003df e010      	LDI  R17,0
                +
0003e0 01fe     +MOVW R30 , R28
0003e1 5ae8     +SUBI R30 , LOW ( - 88 )
0003e2 4fff     +SBCI R31 , HIGH ( - 88 )
0003e3 9001     +LD R0 , Z +
0003e4 81f0     +LD R31 , Z
0003e5 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0003e6 87e8      	STD  Y+8,R30
0003e7 87f9      	STD  Y+8+1,R31
                +
0003e8 01fe     +MOVW R30 , R28
0003e9 5aea     +SUBI R30 , LOW ( - 86 )
0003ea 4fff     +SBCI R31 , HIGH ( - 86 )
0003eb 9001     +LD R0 , Z +
0003ec 81f0     +LD R31 , Z
0003ed 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0003ee 83ee      	STD  Y+6,R30
0003ef 83ff      	STD  Y+6+1,R31
0003f0 81ae      	LDD  R26,Y+6
0003f1 81bf      	LDD  R27,Y+6+1
0003f2 e0e0      	LDI  R30,LOW(0)
0003f3 e0f0      	LDI  R31,HIGH(0)
0003f4 93ed      	ST   X+,R30
0003f5 93fc      	ST   X,R31
                 _0x2020036:
0003f6 01de      	MOVW R26,R28
0003f7 5aa4      	SUBI R26,LOW(-(92))
0003f8 4fbf      	SBCI R27,HIGH(-(92))
0003f9 940e 078d 	CALL SUBOPT_0xD
0003fb 9731      	SBIW R30,1
0003fc 91e4      	LPM  R30,Z
0003fd 2f2e      	MOV  R18,R30
0003fe 30e0      	CPI  R30,0
0003ff f411      	BRNE PC+3
000400 940c 05ec 	JMP _0x2020038
000402 2fe1      	MOV  R30,R17
000403 30e0      	CPI  R30,0
000404 f439      	BRNE _0x202003C
000405 3225      	CPI  R18,37
000406 f411      	BRNE _0x202003D
000407 e011      	LDI  R17,LOW(1)
000408 c002      	RJMP _0x202003E
                 _0x202003D:
000409 940e 07ed 	CALL SUBOPT_0x1B
                 _0x202003E:
00040b c1df      	RJMP _0x202003B
                 _0x202003C:
00040c 30e1      	CPI  R30,LOW(0x1)
00040d f4c1      	BRNE _0x202003F
00040e 3225      	CPI  R18,37
00040f f419      	BRNE _0x2020040
000410 940e 07ed 	CALL SUBOPT_0x1B
000412 c1d7      	RJMP _0x2020115
                 _0x2020040:
000413 e012      	LDI  R17,LOW(2)
000414 e0e0      	LDI  R30,LOW(0)
000415 8bed      	STD  Y+21,R30
000416 e000      	LDI  R16,LOW(0)
000417 322d      	CPI  R18,45
000418 f411      	BRNE _0x2020041
000419 e001      	LDI  R16,LOW(1)
00041a c1d0      	RJMP _0x202003B
                 _0x2020041:
00041b 322b      	CPI  R18,43
00041c f419      	BRNE _0x2020042
00041d e2eb      	LDI  R30,LOW(43)
00041e 8bed      	STD  Y+21,R30
00041f c1cb      	RJMP _0x202003B
                 _0x2020042:
000420 3220      	CPI  R18,32
000421 f419      	BRNE _0x2020043
000422 e2e0      	LDI  R30,LOW(32)
000423 8bed      	STD  Y+21,R30
000424 c1c6      	RJMP _0x202003B
                 _0x2020043:
000425 c002      	RJMP _0x2020044
                 _0x202003F:
000426 30e2      	CPI  R30,LOW(0x2)
000427 f439      	BRNE _0x2020045
                 _0x2020044:
000428 e050      	LDI  R21,LOW(0)
000429 e013      	LDI  R17,LOW(3)
00042a 3320      	CPI  R18,48
00042b f411      	BRNE _0x2020046
00042c 6800      	ORI  R16,LOW(128)
00042d c1bd      	RJMP _0x202003B
                 _0x2020046:
00042e c002      	RJMP _0x2020047
                 _0x2020045:
00042f 30e3      	CPI  R30,LOW(0x3)
000430 f491      	BRNE _0x2020048
                 _0x2020047:
000431 3320      	CPI  R18,48
000432 f010      	BRLO _0x202004A
000433 332a      	CPI  R18,58
000434 f008      	BRLO _0x202004B
                 _0x202004A:
000435 c007      	RJMP _0x2020049
                 _0x202004B:
000436 e0aa      	LDI  R26,LOW(10)
000437 9f5a      	MUL  R21,R26
000438 2d50      	MOV  R21,R0
000439 2fe2      	MOV  R30,R18
00043a 53e0      	SUBI R30,LOW(48)
00043b 0f5e      	ADD  R21,R30
00043c c1ae      	RJMP _0x202003B
                 _0x2020049:
00043d e040      	LDI  R20,LOW(0)
00043e 322e      	CPI  R18,46
00043f f411      	BRNE _0x202004C
000440 e014      	LDI  R17,LOW(4)
000441 c1a9      	RJMP _0x202003B
                 _0x202004C:
000442 c00f      	RJMP _0x202004D
                 _0x2020048:
000443 30e4      	CPI  R30,LOW(0x4)
000444 f499      	BRNE _0x202004F
000445 3320      	CPI  R18,48
000446 f010      	BRLO _0x2020051
000447 332a      	CPI  R18,58
000448 f008      	BRLO _0x2020052
                 _0x2020051:
000449 c008      	RJMP _0x2020050
                 _0x2020052:
00044a 6200      	ORI  R16,LOW(32)
00044b e0aa      	LDI  R26,LOW(10)
00044c 9f4a      	MUL  R20,R26
00044d 2d40      	MOV  R20,R0
00044e 2fe2      	MOV  R30,R18
00044f 53e0      	SUBI R30,LOW(48)
000450 0f4e      	ADD  R20,R30
000451 c199      	RJMP _0x202003B
                 _0x2020050:
                 _0x202004D:
000452 362c      	CPI  R18,108
000453 f419      	BRNE _0x2020053
000454 6002      	ORI  R16,LOW(2)
000455 e015      	LDI  R17,LOW(5)
000456 c194      	RJMP _0x202003B
                 _0x2020053:
000457 c004      	RJMP _0x2020054
                 _0x202004F:
000458 30e5      	CPI  R30,LOW(0x5)
000459 f011      	BREQ PC+3
00045a 940c 05eb 	JMP _0x202003B
                 _0x2020054:
00045c 2fe2      	MOV  R30,R18
00045d 36e3      	CPI  R30,LOW(0x63)
00045e f459      	BRNE _0x2020059
00045f 940e 07f6 	CALL SUBOPT_0x1C
000461 940e 07fd 	CALL SUBOPT_0x1D
000463 940e 07f6 	CALL SUBOPT_0x1C
000465 81a4      	LDD  R26,Z+4
000466 93aa      	ST   -Y,R26
000467 940e 0804 	CALL SUBOPT_0x1E
000469 c180      	RJMP _0x202005A
                 _0x2020059:
00046a 34e5      	CPI  R30,LOW(0x45)
00046b f011      	BREQ _0x202005D
00046c 36e5      	CPI  R30,LOW(0x65)
00046d f409      	BRNE _0x202005E
                 _0x202005D:
00046e c004      	RJMP _0x202005F
                 _0x202005E:
00046f 36e6      	CPI  R30,LOW(0x66)
000470 f011      	BREQ PC+3
000471 940c 04bd 	JMP _0x2020060
                 _0x202005F:
000473 01fe      	MOVW R30,R28
000474 9676      	ADIW R30,22
000475 87ee      	STD  Y+14,R30
000476 87ff      	STD  Y+14+1,R31
000477 940e 080c 	CALL SUBOPT_0x1F
000479 940e 0aa8 	CALL __GETD1P
00047b 940e 0813 	CALL SUBOPT_0x20
00047d 940e 0818 	CALL SUBOPT_0x21
00047f 85ad      	LDD  R26,Y+13
000480 23aa      	TST  R26
000481 f022      	BRMI _0x2020061
000482 89ad      	LDD  R26,Y+21
000483 32ab      	CPI  R26,LOW(0x2B)
000484 f049      	BREQ _0x2020063
000485 c017      	RJMP _0x2020064
                 _0x2020061:
000486 940e 081a 	CALL SUBOPT_0x22
000488 940e 0888 	CALL __ANEGF1
00048a 940e 0813 	CALL SUBOPT_0x20
00048c e2ed      	LDI  R30,LOW(45)
00048d 8bed      	STD  Y+21,R30
                 _0x2020063:
00048e ff07      	SBRS R16,7
00048f c005      	RJMP _0x2020065
000490 89ed      	LDD  R30,Y+21
000491 93ea      	ST   -Y,R30
000492 940e 0804 	CALL SUBOPT_0x1E
000494 c008      	RJMP _0x2020066
                 _0x2020065:
000495 85ee      	LDD  R30,Y+14
000496 85ff      	LDD  R31,Y+14+1
000497 9631      	ADIW R30,1
000498 87ee      	STD  Y+14,R30
000499 87ff      	STD  Y+14+1,R31
00049a 9731      	SBIW R30,1
00049b 89ad      	LDD  R26,Y+21
00049c 83a0      	STD  Z+0,R26
                 _0x2020066:
                 _0x2020064:
00049d ff05      	SBRS R16,5
00049e e046      	LDI  R20,LOW(6)
00049f 3626      	CPI  R18,102
0004a0 f461      	BRNE _0x2020068
0004a1 940e 081a 	CALL SUBOPT_0x22
0004a3 940e 0ab8 	CALL __PUTPARD1
0004a5 934a      	ST   -Y,R20
0004a6 89eb      	LDD  R30,Y+19
0004a7 89fc      	LDD  R31,Y+19+1
0004a8 93fa      	ST   -Y,R31
0004a9 93ea      	ST   -Y,R30
0004aa 940e 0691 	CALL _ftoa
0004ac c00b      	RJMP _0x2020069
                 _0x2020068:
0004ad 940e 081a 	CALL SUBOPT_0x22
0004af 940e 0ab8 	CALL __PUTPARD1
0004b1 934a      	ST   -Y,R20
0004b2 932a      	ST   -Y,R18
0004b3 89ec      	LDD  R30,Y+20
0004b4 89fd      	LDD  R31,Y+20+1
0004b5 93fa      	ST   -Y,R31
0004b6 93ea      	ST   -Y,R30
0004b7 de4e      	RCALL __ftoe_G101
                 _0x2020069:
0004b8 01fe      	MOVW R30,R28
0004b9 9676      	ADIW R30,22
0004ba 940e 081f 	CALL SUBOPT_0x23
0004bc c01e      	RJMP _0x202006A
                 _0x2020060:
0004bd 37e3      	CPI  R30,LOW(0x73)
0004be f439      	BRNE _0x202006C
0004bf 940e 0818 	CALL SUBOPT_0x21
0004c1 940e 0827 	CALL SUBOPT_0x24
0004c3 940e 081f 	CALL SUBOPT_0x23
0004c5 c00e      	RJMP _0x202006D
                 _0x202006C:
0004c6 37e0      	CPI  R30,LOW(0x70)
0004c7 f4c1      	BRNE _0x202006F
0004c8 940e 0818 	CALL SUBOPT_0x21
0004ca 940e 0827 	CALL SUBOPT_0x24
0004cc 87ee      	STD  Y+14,R30
0004cd 87ff      	STD  Y+14+1,R31
0004ce 93fa      	ST   -Y,R31
0004cf 93ea      	ST   -Y,R30
0004d0 940e 0640 	CALL _strlenf
0004d2 2f1e      	MOV  R17,R30
0004d3 6008      	ORI  R16,LOW(8)
                 _0x202006D:
0004d4 770f      	ANDI R16,LOW(127)
0004d5 3040      	CPI  R20,0
0004d6 f011      	BREQ _0x2020071
0004d7 1741      	CP   R20,R17
0004d8 f008      	BRLO _0x2020072
                 _0x2020071:
0004d9 c001      	RJMP _0x2020070
                 _0x2020072:
0004da 2f14      	MOV  R17,R20
                 _0x2020070:
                 _0x202006A:
0004db e040      	LDI  R20,LOW(0)
0004dc e0e0      	LDI  R30,LOW(0)
0004dd 8bec      	STD  Y+20,R30
0004de e030      	LDI  R19,LOW(0)
0004df c06e      	RJMP _0x2020073
                 _0x202006F:
0004e0 36e4      	CPI  R30,LOW(0x64)
0004e1 f011      	BREQ _0x2020076
0004e2 36e9      	CPI  R30,LOW(0x69)
0004e3 f411      	BRNE _0x2020077
                 _0x2020076:
0004e4 6004      	ORI  R16,LOW(4)
0004e5 c002      	RJMP _0x2020078
                 _0x2020077:
0004e6 37e5      	CPI  R30,LOW(0x75)
0004e7 f4a1      	BRNE _0x2020079
                 _0x2020078:
0004e8 e0ea      	LDI  R30,LOW(10)
0004e9 8bec      	STD  Y+20,R30
0004ea ff01      	SBRS R16,1
0004eb c008      	RJMP _0x202007A
                +
0004ec e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0004ed ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0004ee e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0004ef e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0004f0 940e 075a 	CALL SUBOPT_0x6
0004f2 e01a      	LDI  R17,LOW(10)
0004f3 c023      	RJMP _0x202007B
                 _0x202007A:
                +
0004f4 e1e0     +LDI R30 , LOW ( 0x2710 )
0004f5 e2f7     +LDI R31 , HIGH ( 0x2710 )
0004f6 e060     +LDI R22 , BYTE3 ( 0x2710 )
0004f7 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0004f8 940e 075a 	CALL SUBOPT_0x6
0004fa e015      	LDI  R17,LOW(5)
0004fb c01b      	RJMP _0x202007B
                 _0x2020079:
0004fc 35e8      	CPI  R30,LOW(0x58)
0004fd f411      	BRNE _0x202007D
0004fe 6008      	ORI  R16,LOW(8)
0004ff c004      	RJMP _0x202007E
                 _0x202007D:
000500 37e8      	CPI  R30,LOW(0x78)
000501 f011      	BREQ PC+3
000502 940c 05ea 	JMP _0x20200BC
                 _0x202007E:
000504 e1e0      	LDI  R30,LOW(16)
000505 8bec      	STD  Y+20,R30
000506 ff01      	SBRS R16,1
000507 c008      	RJMP _0x2020080
                +
000508 e0e0     +LDI R30 , LOW ( 0x10000000 )
000509 e0f0     +LDI R31 , HIGH ( 0x10000000 )
00050a e060     +LDI R22 , BYTE3 ( 0x10000000 )
00050b e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00050c 940e 075a 	CALL SUBOPT_0x6
00050e e018      	LDI  R17,LOW(8)
00050f c007      	RJMP _0x202007B
                 _0x2020080:
                +
000510 e0e0     +LDI R30 , LOW ( 0x1000 )
000511 e1f0     +LDI R31 , HIGH ( 0x1000 )
000512 e060     +LDI R22 , BYTE3 ( 0x1000 )
000513 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000514 940e 075a 	CALL SUBOPT_0x6
000516 e014      	LDI  R17,LOW(4)
                 _0x202007B:
000517 3040      	CPI  R20,0
000518 f011      	BREQ _0x2020081
000519 770f      	ANDI R16,LOW(127)
00051a c001      	RJMP _0x2020082
                 _0x2020081:
00051b e041      	LDI  R20,LOW(1)
                 _0x2020082:
00051c ff01      	SBRS R16,1
00051d c008      	RJMP _0x2020083
00051e 940e 0818 	CALL SUBOPT_0x21
000520 940e 080c 	CALL SUBOPT_0x1F
000522 9614      	ADIW R26,4
000523 940e 0aa8 	CALL __GETD1P
000525 c00f      	RJMP _0x2020116
                 _0x2020083:
000526 ff02      	SBRS R16,2
000527 c007      	RJMP _0x2020085
000528 940e 0818 	CALL SUBOPT_0x21
00052a 940e 0827 	CALL SUBOPT_0x24
00052c 940e 0a43 	CALL __CWD1
00052e c006      	RJMP _0x2020116
                 _0x2020085:
00052f 940e 0818 	CALL SUBOPT_0x21
000531 940e 0827 	CALL SUBOPT_0x24
000533 2766      	CLR  R22
000534 2777      	CLR  R23
                 _0x2020116:
                +
000535 87ea     +STD Y + 10 , R30
000536 87fb     +STD Y + 10 + 1 , R31
000537 876c     +STD Y + 10 + 2 , R22
000538 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000539 ff02      	SBRS R16,2
00053a c012      	RJMP _0x2020087
00053b 85ad      	LDD  R26,Y+13
00053c 23aa      	TST  R26
00053d f442      	BRPL _0x2020088
00053e 940e 081a 	CALL SUBOPT_0x22
000540 940e 0a35 	CALL __ANEGD1
000542 940e 0813 	CALL SUBOPT_0x20
000544 e2ed      	LDI  R30,LOW(45)
000545 8bed      	STD  Y+21,R30
                 _0x2020088:
000546 89ed      	LDD  R30,Y+21
000547 30e0      	CPI  R30,0
000548 f019      	BREQ _0x2020089
000549 5f1f      	SUBI R17,-LOW(1)
00054a 5f4f      	SUBI R20,-LOW(1)
00054b c001      	RJMP _0x202008A
                 _0x2020089:
00054c 7f0b      	ANDI R16,LOW(251)
                 _0x202008A:
                 _0x2020087:
00054d 2f34      	MOV  R19,R20
                 _0x2020073:
00054e fd00      	SBRC R16,0
00054f c014      	RJMP _0x202008B
                 _0x202008C:
000550 1715      	CP   R17,R21
000551 f410      	BRSH _0x202008F
000552 1735      	CP   R19,R21
000553 f008      	BRLO _0x2020090
                 _0x202008F:
000554 c00f      	RJMP _0x202008E
                 _0x2020090:
000555 ff07      	SBRS R16,7
000556 c008      	RJMP _0x2020091
000557 ff02      	SBRS R16,2
000558 c004      	RJMP _0x2020092
000559 7f0b      	ANDI R16,LOW(251)
00055a 892d      	LDD  R18,Y+21
00055b 5011      	SUBI R17,LOW(1)
00055c c001      	RJMP _0x2020093
                 _0x2020092:
00055d e320      	LDI  R18,LOW(48)
                 _0x2020093:
00055e c001      	RJMP _0x2020094
                 _0x2020091:
00055f e220      	LDI  R18,LOW(32)
                 _0x2020094:
000560 940e 07ed 	CALL SUBOPT_0x1B
000562 5051      	SUBI R21,LOW(1)
000563 cfec      	RJMP _0x202008C
                 _0x202008E:
                 _0x202008B:
                 _0x2020095:
000564 1714      	CP   R17,R20
000565 f490      	BRSH _0x2020097
000566 6100      	ORI  R16,LOW(16)
000567 ff02      	SBRS R16,2
000568 c006      	RJMP _0x2020098
000569 940e 082c 	CALL SUBOPT_0x25
00056b f009      	BREQ _0x2020099
00056c 5051      	SUBI R21,LOW(1)
                 _0x2020099:
00056d 5011      	SUBI R17,LOW(1)
00056e 5041      	SUBI R20,LOW(1)
                 _0x2020098:
00056f e3e0      	LDI  R30,LOW(48)
000570 93ea      	ST   -Y,R30
000571 940e 0804 	CALL SUBOPT_0x1E
000573 3050      	CPI  R21,0
000574 f009      	BREQ _0x202009A
000575 5051      	SUBI R21,LOW(1)
                 _0x202009A:
000576 5041      	SUBI R20,LOW(1)
000577 cfec      	RJMP _0x2020095
                 _0x2020097:
000578 2f31      	MOV  R19,R17
000579 89ec      	LDD  R30,Y+20
00057a 30e0      	CPI  R30,0
00057b f4b9      	BRNE _0x202009B
                 _0x202009C:
00057c 3030      	CPI  R19,0
00057d f0a1      	BREQ _0x202009E
00057e ff03      	SBRS R16,3
00057f c006      	RJMP _0x202009F
000580 85ee      	LDD  R30,Y+14
000581 85ff      	LDD  R31,Y+14+1
000582 9125      	LPM  R18,Z+
000583 87ee      	STD  Y+14,R30
000584 87ff      	STD  Y+14+1,R31
000585 c005      	RJMP _0x20200A0
                 _0x202009F:
000586 85ae      	LDD  R26,Y+14
000587 85bf      	LDD  R27,Y+14+1
000588 912d      	LD   R18,X+
000589 87ae      	STD  Y+14,R26
00058a 87bf      	STD  Y+14+1,R27
                 _0x20200A0:
00058b 940e 07ed 	CALL SUBOPT_0x1B
00058d 3050      	CPI  R21,0
00058e f009      	BREQ _0x20200A1
00058f 5051      	SUBI R21,LOW(1)
                 _0x20200A1:
000590 5031      	SUBI R19,LOW(1)
000591 cfea      	RJMP _0x202009C
                 _0x202009E:
000592 c04d      	RJMP _0x20200A2
                 _0x202009B:
                 _0x20200A4:
000593 940e 0840 	CALL SUBOPT_0x26
000595 940e 0a63 	CALL __DIVD21U
000597 2f2e      	MOV  R18,R30
000598 302a      	CPI  R18,10
000599 f030      	BRLO _0x20200A6
00059a ff03      	SBRS R16,3
00059b c002      	RJMP _0x20200A7
00059c 5c29      	SUBI R18,-LOW(55)
00059d c001      	RJMP _0x20200A8
                 _0x20200A7:
00059e 5a29      	SUBI R18,-LOW(87)
                 _0x20200A8:
00059f c001      	RJMP _0x20200A9
                 _0x20200A6:
0005a0 5d20      	SUBI R18,-LOW(48)
                 _0x20200A9:
0005a1 fd04      	SBRC R16,4
0005a2 c01f      	RJMP _0x20200AB
0005a3 3321      	CPI  R18,49
0005a4 f450      	BRSH _0x20200AD
0005a5 940e 076a 	CALL SUBOPT_0x8
                +
0005a7 30a1     +CPI R26 , LOW ( 0x1 )
0005a8 e0e0     +LDI R30 , HIGH ( 0x1 )
0005a9 07be     +CPC R27 , R30
0005aa e0e0     +LDI R30 , BYTE3 ( 0x1 )
0005ab 078e     +CPC R24 , R30
0005ac e0e0     +LDI R30 , BYTE4 ( 0x1 )
0005ad 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0005ae f409      	BRNE _0x20200AC
                 _0x20200AD:
0005af c00b      	RJMP _0x20200AF
                 _0x20200AC:
0005b0 1743      	CP   R20,R19
0005b1 f440      	BRSH _0x2020117
0005b2 1753      	CP   R21,R19
0005b3 f010      	BRLO _0x20200B2
0005b4 ff00      	SBRS R16,0
0005b5 c001      	RJMP _0x20200B3
                 _0x20200B2:
0005b6 c010      	RJMP _0x20200B1
                 _0x20200B3:
0005b7 e220      	LDI  R18,LOW(32)
0005b8 ff07      	SBRS R16,7
0005b9 c008      	RJMP _0x20200B4
                 _0x2020117:
0005ba e320      	LDI  R18,LOW(48)
                 _0x20200AF:
0005bb 6100      	ORI  R16,LOW(16)
0005bc ff02      	SBRS R16,2
0005bd c004      	RJMP _0x20200B5
0005be 940e 082c 	CALL SUBOPT_0x25
0005c0 f009      	BREQ _0x20200B6
0005c1 5051      	SUBI R21,LOW(1)
                 _0x20200B6:
                 _0x20200B5:
                 _0x20200B4:
                 _0x20200AB:
0005c2 940e 07ed 	CALL SUBOPT_0x1B
0005c4 3050      	CPI  R21,0
0005c5 f009      	BREQ _0x20200B7
0005c6 5051      	SUBI R21,LOW(1)
                 _0x20200B7:
                 _0x20200B1:
0005c7 5031      	SUBI R19,LOW(1)
0005c8 940e 0840 	CALL SUBOPT_0x26
0005ca 940e 0a94 	CALL __MODD21U
0005cc 940e 0813 	CALL SUBOPT_0x20
0005ce 89ec      	LDD  R30,Y+20
0005cf 940e 076a 	CALL SUBOPT_0x8
0005d1 27ff      	CLR  R31
0005d2 2766      	CLR  R22
0005d3 2777      	CLR  R23
0005d4 940e 0a63 	CALL __DIVD21U
0005d6 940e 075a 	CALL SUBOPT_0x6
                +
0005d8 89e8     +LDD R30 , Y + 16
0005d9 89f9     +LDD R31 , Y + 16 + 1
0005da 896a     +LDD R22 , Y + 16 + 2
0005db 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0005dc 940e 0aca 	CALL __CPD10
0005de f009      	BREQ _0x20200A5
0005df cfb3      	RJMP _0x20200A4
                 _0x20200A5:
                 _0x20200A2:
0005e0 ff00      	SBRS R16,0
0005e1 c008      	RJMP _0x20200B8
                 _0x20200B9:
0005e2 3050      	CPI  R21,0
0005e3 f031      	BREQ _0x20200BB
0005e4 5051      	SUBI R21,LOW(1)
0005e5 e2e0      	LDI  R30,LOW(32)
0005e6 93ea      	ST   -Y,R30
0005e7 940e 0804 	CALL SUBOPT_0x1E
0005e9 cff8      	RJMP _0x20200B9
                 _0x20200BB:
                 _0x20200B8:
                 _0x20200BC:
                 _0x202005A:
                 _0x2020115:
0005ea e010      	LDI  R17,LOW(0)
                 _0x202003B:
0005eb ce0a      	RJMP _0x2020036
                 _0x2020038:
0005ec 81ae      	LDD  R26,Y+6
0005ed 81bf      	LDD  R27,Y+6+1
0005ee 940e 0aa4 	CALL __GETW1P
0005f0 940e 0adb 	CALL __LOADLOCR6
0005f2 96ef      	ADIW R28,63
0005f3 966f      	ADIW R28,31
0005f4 9508      	RET
                 _sprintf:
0005f5 92ff      	PUSH R15
0005f6 2ef8      	MOV  R15,R24
0005f7 9726      	SBIW R28,6
0005f8 940e 0ad6 	CALL __SAVELOCR4
0005fa 940e 0849 	CALL SUBOPT_0x27
0005fc 9730      	SBIW R30,0
0005fd f419      	BRNE _0x20200BD
0005fe efef      	LDI  R30,LOW(65535)
0005ff efff      	LDI  R31,HIGH(65535)
000600 c025      	RJMP _0x20C0004
                 _0x20200BD:
000601 01de      	MOVW R26,R28
000602 9616      	ADIW R26,6
000603 940e 0a31 	CALL __ADDW2R15
000605 018d      	MOVW R16,R26
000606 940e 0849 	CALL SUBOPT_0x27
000608 83ee      	STD  Y+6,R30
000609 83ff      	STD  Y+6+1,R31
00060a e0e0      	LDI  R30,LOW(0)
00060b 87e8      	STD  Y+8,R30
00060c 87e9      	STD  Y+8+1,R30
00060d 01de      	MOVW R26,R28
00060e 961a      	ADIW R26,10
00060f 940e 0a31 	CALL __ADDW2R15
000611 940e 0aa4 	CALL __GETW1P
000613 93fa      	ST   -Y,R31
000614 93ea      	ST   -Y,R30
000615 931a      	ST   -Y,R17
000616 930a      	ST   -Y,R16
000617 ecee      	LDI  R30,LOW(_put_buff_G101)
000618 e0f2      	LDI  R31,HIGH(_put_buff_G101)
000619 93fa      	ST   -Y,R31
00061a 93ea      	ST   -Y,R30
00061b 01fe      	MOVW R30,R28
00061c 963a      	ADIW R30,10
00061d 93fa      	ST   -Y,R31
00061e 93ea      	ST   -Y,R30
00061f ddbb      	RCALL __print_G101
000620 019f      	MOVW R18,R30
000621 81ae      	LDD  R26,Y+6
000622 81bf      	LDD  R27,Y+6+1
000623 e0e0      	LDI  R30,LOW(0)
000624 93ec      	ST   X,R30
000625 01f9      	MOVW R30,R18
                 _0x20C0004:
000626 940e 0add 	CALL __LOADLOCR4
000628 962a      	ADIW R28,10
000629 90ff      	POP  R15
00062a 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
00062b 91e9          ld   r30,y+
00062c 91f9          ld   r31,y+
00062d 91a9          ld   r26,y+
00062e 91b9          ld   r27,y+
00062f 01cd          movw r24,r26
                 strcpyf0:
000630 9005      	lpm  r0,z+
000631 920d          st   x+,r0
000632 2000          tst  r0
000633 f7e1          brne strcpyf0
000634 01fc          movw r30,r24
000635 9508          ret
                 _strlen:
000636 91a9          ld   r26,y+
000637 91b9          ld   r27,y+
000638 27ee          clr  r30
000639 27ff          clr  r31
                 strlen0:
00063a 916d          ld   r22,x+
00063b 2366          tst  r22
00063c f011          breq strlen1
00063d 9631          adiw r30,1
00063e cffb          rjmp strlen0
                 strlen1:
00063f 9508          ret
                 _strlenf:
000640 27aa          clr  r26
000641 27bb          clr  r27
000642 91e9          ld   r30,y+
000643 91f9          ld   r31,y+
                 strlenf0:
000644 9005      	lpm  r0,z+
000645 2000          tst  r0
000646 f011          breq strlenf1
000647 9611          adiw r26,1
000648 cffb          rjmp strlenf0
                 strlenf1:
000649 01fd          movw r30,r26
00064a 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00064b 817b         ldd  r23,y+3
00064c 816a         ldd  r22,y+2
00064d 81f9         ldd  r31,y+1
00064e 81e8         ld   r30,y
00064f fb77         bst  r23,7
000650 0f77         lsl  r23
000651 fd67         sbrc r22,7
000652 6071         sbr  r23,1
000653 2f97         mov  r25,r23
000654 579e         subi r25,0x7e
000655 f081         breq __ftrunc0
000656 f078         brcs __ftrunc0
000657 3198         cpi  r25,24
000658 f490         brsh __ftrunc1
000659 27aa         clr  r26
00065a 27bb         clr  r27
00065b 2788         clr  r24
                 __ftrunc2:
00065c 9408         sec
00065d 9587         ror  r24
00065e 95b7         ror  r27
00065f 95a7         ror  r26
000660 959a         dec  r25
000661 f7d1         brne __ftrunc2
000662 23ea         and  r30,r26
000663 23fb         and  r31,r27
000664 2368         and  r22,r24
000665 c005         rjmp __ftrunc1
                 __ftrunc0:
000666 94e8         clt
000667 2777         clr  r23
000668 27ee         clr  r30
000669 27ff         clr  r31
00066a 2766         clr  r22
                 __ftrunc1:
00066b 776f         cbr  r22,0x80
00066c 9576         lsr  r23
00066d f408         brcc __ftrunc3
00066e 6860         sbr  r22,0x80
                 __ftrunc3:
00066f f977         bld  r23,7
000670 91a9         ld   r26,y+
000671 91b9         ld   r27,y+
000672 9189         ld   r24,y+
000673 9199         ld   r25,y+
000674 17ea         cp   r30,r26
000675 07fb         cpc  r31,r27
000676 0768         cpc  r22,r24
000677 0779         cpc  r23,r25
000678 fb97         bst  r25,7
000679 9508         ret
                 _floor:
00067a 940e 0850 	CALL SUBOPT_0x28
00067c 940e 0ab8 	CALL __PUTPARD1
00067e 940e 064b 	CALL _ftrunc
000680 940e 0ab3 	CALL __PUTD1S0
000682 f419          brne __floor1
                 __floor0:
000683 940e 0850 	CALL SUBOPT_0x28
000685 c009      	RJMP _0x20C0003
                 __floor1:
000686 f7e6          brtc __floor0
000687 940e 0850 	CALL SUBOPT_0x28
                +
000689 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00068a e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00068b e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00068c e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00068d 940e 0927 	CALL __SUBF12
                 _0x20C0003:
00068f 9624      	ADIW R28,4
000690 9508      	RET
                 
                 	.CSEG
                 _ftoa:
000691 9724      	SBIW R28,4
000692 e0e0      	LDI  R30,LOW(0)
000693 83e8      	ST   Y,R30
000694 83e9      	STD  Y+1,R30
000695 83ea      	STD  Y+2,R30
000696 e3ef      	LDI  R30,LOW(63)
000697 83eb      	STD  Y+3,R30
000698 931a      	ST   -Y,R17
000699 930a      	ST   -Y,R16
00069a 85eb      	LDD  R30,Y+11
00069b 85fc      	LDD  R31,Y+11+1
00069c 3fef      	CPI  R30,LOW(0xFFFF)
00069d efaf      	LDI  R26,HIGH(0xFFFF)
00069e 07fa      	CPC  R31,R26
00069f f429      	BRNE _0x20A000D
0006a0 d1b2      	RCALL SUBOPT_0x29
                +
0006a1 eae6     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0006a2 e0f0     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW1FN _0x20A0000,0
0006a3 d0ef      	RCALL SUBOPT_0xE
0006a4 c088      	RJMP _0x20C0002
                 _0x20A000D:
0006a5 3fef      	CPI  R30,LOW(0x7FFF)
0006a6 e7af      	LDI  R26,HIGH(0x7FFF)
0006a7 07fa      	CPC  R31,R26
0006a8 f429      	BRNE _0x20A000C
0006a9 d1a9      	RCALL SUBOPT_0x29
                +
0006aa eae7     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0006ab e0f0     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW1FN _0x20A0000,1
0006ac d0e6      	RCALL SUBOPT_0xE
0006ad c07f      	RJMP _0x20C0002
                 _0x20A000C:
0006ae 85ac      	LDD  R26,Y+12
0006af 23aa      	TST  R26
0006b0 f452      	BRPL _0x20A000F
                +
0006b1 85e9     +LDD R30 , Y + 9
0006b2 85fa     +LDD R31 , Y + 9 + 1
0006b3 856b     +LDD R22 , Y + 9 + 2
0006b4 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0006b5 940e 0888 	CALL __ANEGF1
0006b7 d1a0      	RCALL SUBOPT_0x2A
0006b8 d1a4      	RCALL SUBOPT_0x2B
0006b9 e2ed      	LDI  R30,LOW(45)
0006ba 93ec      	ST   X,R30
                 _0x20A000F:
0006bb 85a8      	LDD  R26,Y+8
0006bc 30a7      	CPI  R26,LOW(0x7)
0006bd f010      	BRLO _0x20A0010
0006be e0e6      	LDI  R30,LOW(6)
0006bf 87e8      	STD  Y+8,R30
                 _0x20A0010:
0006c0 8518      	LDD  R17,Y+8
                 _0x20A0011:
0006c1 2fe1      	MOV  R30,R17
0006c2 5011      	SUBI R17,1
0006c3 30e0      	CPI  R30,0
0006c4 f021      	BREQ _0x20A0013
0006c5 d19e      	RCALL SUBOPT_0x2C
0006c6 d108      	RCALL SUBOPT_0x16
0006c7 d1a1      	RCALL SUBOPT_0x2D
0006c8 cff8      	RJMP _0x20A0011
                 _0x20A0013:
0006c9 d1a4      	RCALL SUBOPT_0x2E
0006ca 940e 092e 	CALL __ADDF12
0006cc d18b      	RCALL SUBOPT_0x2A
0006cd e010      	LDI  R17,LOW(0)
                +
0006ce e0e0     +LDI R30 , LOW ( 0x3F800000 )
0006cf e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0006d0 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0006d1 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0006d2 d196      	RCALL SUBOPT_0x2D
                 _0x20A0014:
0006d3 d19a      	RCALL SUBOPT_0x2E
0006d4 940e 0a11 	CALL __CMPF12
0006d6 f060      	BRLO _0x20A0016
0006d7 d18c      	RCALL SUBOPT_0x2C
0006d8 d0e6      	RCALL SUBOPT_0x13
0006d9 d18f      	RCALL SUBOPT_0x2D
0006da 5f1f      	SUBI R17,-LOW(1)
0006db 3217      	CPI  R17,39
0006dc f028      	BRLO _0x20A0017
0006dd d175      	RCALL SUBOPT_0x29
                +
0006de eaeb     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0006df e0f0     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW1FN _0x20A0000,5
0006e0 d0b2      	RCALL SUBOPT_0xE
0006e1 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0006e2 cff0      	RJMP _0x20A0014
                 _0x20A0016:
0006e3 3010      	CPI  R17,0
0006e4 f421      	BRNE _0x20A0018
0006e5 d177      	RCALL SUBOPT_0x2B
0006e6 e3e0      	LDI  R30,LOW(48)
0006e7 93ec      	ST   X,R30
0006e8 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0006e9 2fe1      	MOV  R30,R17
0006ea 5011      	SUBI R17,1
0006eb 30e0      	CPI  R30,0
0006ec f0e1      	BREQ _0x20A001C
0006ed d176      	RCALL SUBOPT_0x2C
0006ee d0e0      	RCALL SUBOPT_0x16
0006ef d0d8      	RCALL SUBOPT_0x15
0006f0 940e 0ab8 	CALL __PUTPARD1
0006f2 940e 067a 	CALL _floor
0006f4 d174      	RCALL SUBOPT_0x2D
0006f5 d178      	RCALL SUBOPT_0x2E
0006f6 940e 09cc 	CALL __DIVF21
0006f8 940e 08bb 	CALL __CFD1U
0006fa 2f0e      	MOV  R16,R30
0006fb d161      	RCALL SUBOPT_0x2B
0006fc d0e0      	RCALL SUBOPT_0x18
0006fd e0f0      	LDI  R31,0
0006fe d165      	RCALL SUBOPT_0x2C
0006ff 940e 0a43 	CALL __CWD1
000701 940e 08f4 	CALL __CDF1
000703 940e 097e 	CALL __MULF12
000705 d171      	RCALL SUBOPT_0x2F
000706 d0db      	RCALL SUBOPT_0x19
000707 d150      	RCALL SUBOPT_0x2A
000708 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000709 85e8      	LDD  R30,Y+8
00070a 30e0      	CPI  R30,0
00070b f0e9      	BREQ _0x20C0001
00070c d150      	RCALL SUBOPT_0x2B
00070d e2ee      	LDI  R30,LOW(46)
00070e 93ec      	ST   X,R30
                 _0x20A001E:
00070f 85e8      	LDD  R30,Y+8
000710 50e1      	SUBI R30,LOW(1)
000711 87e8      	STD  Y+8,R30
000712 5fef      	SUBI R30,-LOW(1)
000713 f0a9      	BREQ _0x20A0020
000714 d162      	RCALL SUBOPT_0x2F
000715 d0a9      	RCALL SUBOPT_0x13
000716 d141      	RCALL SUBOPT_0x2A
                +
000717 85e9     +LDD R30 , Y + 9
000718 85fa     +LDD R31 , Y + 9 + 1
000719 856b     +LDD R22 , Y + 9 + 2
00071a 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00071b 940e 08bb 	CALL __CFD1U
00071d 2f0e      	MOV  R16,R30
00071e d13e      	RCALL SUBOPT_0x2B
00071f d0bd      	RCALL SUBOPT_0x18
000720 e0f0      	LDI  R31,0
000721 d155      	RCALL SUBOPT_0x2F
000722 940e 0a43 	CALL __CWD1
000724 940e 08f4 	CALL __CDF1
000726 d0bb      	RCALL SUBOPT_0x19
000727 d130      	RCALL SUBOPT_0x2A
000728 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000729 81ae      	LDD  R26,Y+6
00072a 81bf      	LDD  R27,Y+6+1
00072b e0e0      	LDI  R30,LOW(0)
00072c 93ec      	ST   X,R30
                 _0x20C0002:
00072d 8119      	LDD  R17,Y+1
00072e 8108      	LDD  R16,Y+0
00072f 962d      	ADIW R28,13
000730 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _distance:
000311           	.BYTE 0x4
                 __base_y_G100:
000315           	.BYTE 0x4
                 __seed_G105:
000319           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000731 93fa      	ST   -Y,R31
000732 93ea      	ST   -Y,R30
000733 940c 087c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000735 e0e0      	LDI  R30,LOW(0)
000736 93e0 0085 	STS  133,R30
000738 93e0 0084 	STS  132,R30
00073a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00073b 2766      	CLR  R22
00073c 2777      	CLR  R23
00073d 940e 08f4 	CALL __CDF1
                +
00073f e0a0     +LDI R26 , LOW ( 0x3F800000 )
000740 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000741 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000742 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000743 940e 097e 	CALL __MULF12
000745 01df      	MOVW R26,R30
000746 01cb      	MOVW R24,R22
000747 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000748 940e 0ab8 	CALL __PUTPARD1
00074a e084      	LDI  R24,4
00074b 940e 05f5 	CALL _sprintf
00074d 9628      	ADIW R28,8
00074e e0e0      	LDI  R30,LOW(0)
00074f 93ea      	ST   -Y,R30
000750 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000751 93fa      	ST   -Y,R31
000752 93ea      	ST   -Y,R30
000753 940c 028c 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
                +
000755 e0e0     +LDI R30 , LOW ( 0x41200000 )
000756 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000757 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000758 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000759 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6:
                +
00075a 8be8     +STD Y + 16 , R30
00075b 8bf9     +STD Y + 16 + 1 , R31
00075c 8b6a     +STD Y + 16 + 2 , R22
00075d 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00075e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
00075f 940e 00c5 	CALL _activeDistantSensor
000761 91a0 0311 	LDS  R26,_distance
000763 91b0 0312 	LDS  R27,_distance+1
000765 9180 0313 	LDS  R24,_distance+2
000767 9190 0314 	LDS  R25,_distance+3
000769 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
00076a 89a8     +LDD R26 , Y + 16
00076b 89b9     +LDD R27 , Y + 16 + 1
00076c 898a     +LDD R24 , Y + 16 + 2
00076d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00076e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
00076f e0e0     +LDI R30 , LOW ( 0x42200000 )
000770 e0f0     +LDI R31 , HIGH ( 0x42200000 )
000771 e260     +LDI R22 , BYTE3 ( 0x42200000 )
000772 e472     +LDI R23 , BYTE4 ( 0x42200000 )
                 	__GETD1N 0x42200000
000773 940e 0a11 	CALL __CMPF12
000775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000776 dff3      	RCALL SUBOPT_0x8
                +
000777 e0e0     +LDI R30 , LOW ( 0x41A00000 )
000778 e0f0     +LDI R31 , HIGH ( 0x41A00000 )
000779 ea60     +LDI R22 , BYTE3 ( 0x41A00000 )
00077a e471     +LDI R23 , BYTE4 ( 0x41A00000 )
                 	__GETD1N 0x41A00000
00077b 940e 0a11 	CALL __CMPF12
00077d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB:
00077e 93ea      	ST   -Y,R30
00077f 940e 0250 	CALL __lcd_write_data
000781 e0e3      	LDI  R30,LOW(3)
000782 e0f0      	LDI  R31,HIGH(3)
000783 cfad      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
000784 e3e0      	LDI  R30,LOW(48)
000785 93ea      	ST   -Y,R30
000786 940e 022c 	CALL __lcd_write_nibble_G100
                +
000788 ec88     +LDI R24 , LOW ( 200 )
000789 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00078a 9701     +SBIW R24 , 1
00078b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00078c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
00078d 91ed      	LD   R30,X+
00078e 91fd      	LD   R31,X+
00078f 9631      	ADIW R30,1
000790 93fe      	ST   -X,R31
000791 93ee      	ST   -X,R30
000792 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
000793 93fa      	ST   -Y,R31
000794 93ea      	ST   -Y,R30
000795 940c 062b 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xF:
                +
000797 81ac     +LDD R26 , Y + 4
000798 81bd     +LDD R27 , Y + 4 + 1
000799 818e     +LDD R24 , Y + 4 + 2
00079a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00079b dfb9      	RCALL SUBOPT_0x5
00079c 940e 097e 	CALL __MULF12
                +
00079e 83ec     +STD Y + 4 , R30
00079f 83fd     +STD Y + 4 + 1 , R31
0007a0 836e     +STD Y + 4 + 2 , R22
0007a1 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0007a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
                +
0007a3 81ec     +LDD R30 , Y + 4
0007a4 81fd     +LDD R31 , Y + 4 + 1
0007a5 816e     +LDD R22 , Y + 4 + 2
0007a6 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0007a7 85ac     +LDD R26 , Y + 12
0007a8 85bd     +LDD R27 , Y + 12 + 1
0007a9 858e     +LDD R24 , Y + 12 + 2
0007aa 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007ab 940e 0a11 	CALL __CMPF12
0007ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
                +
0007ae 85ac     +LDD R26 , Y + 12
0007af 85bd     +LDD R27 , Y + 12 + 1
0007b0 858e     +LDD R24 , Y + 12 + 2
0007b1 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
                +
0007b3 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0007b4 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0007b5 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0007b6 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0007b7 940e 097e 	CALL __MULF12
                +
0007b9 87ec     +STD Y + 12 , R30
0007ba 87fd     +STD Y + 12 + 1 , R31
0007bb 876e     +STD Y + 12 + 2 , R22
0007bc 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007bd 5f3f      	SUBI R19,-LOW(1)
0007be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
0007bf df95      	RCALL SUBOPT_0x5
0007c0 940e 097e 	CALL __MULF12
0007c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
                +
0007c3 87ec     +STD Y + 12 , R30
0007c4 87fd     +STD Y + 12 + 1 , R31
0007c5 876e     +STD Y + 12 + 2 , R22
0007c6 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
0007c8 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0007c9 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0007ca e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0007cb e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0007cc 940e 092e 	CALL __ADDF12
0007ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
0007cf eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0007d0 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0007d1 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0007d2 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0007d3 940e 097e 	CALL __MULF12
0007d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
0007d6 85a8      	LDD  R26,Y+8
0007d7 85b9      	LDD  R27,Y+8+1
0007d8 9611      	ADIW R26,1
0007d9 87a8      	STD  Y+8,R26
0007da 87b9      	STD  Y+8+1,R27
0007db 9711      	SBIW R26,1
0007dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
0007dd 2fe0      	MOV  R30,R16
0007de 5de0      	SUBI R30,-LOW(48)
0007df 93ec      	ST   X,R30
0007e0 2fe0      	MOV  R30,R16
0007e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
0007e2 940e 0abd 	CALL __SWAPD12
0007e4 940e 0927 	CALL __SUBF12
0007e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1A:
0007e7 85e8      	LDD  R30,Y+8
0007e8 85f9      	LDD  R31,Y+8+1
0007e9 9631      	ADIW R30,1
0007ea 87e8      	STD  Y+8,R30
0007eb 87f9      	STD  Y+8+1,R31
0007ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
0007ed 932a      	ST   -Y,R18
0007ee 81ef      	LDD  R30,Y+7
0007ef 85f8      	LDD  R31,Y+7+1
0007f0 93fa      	ST   -Y,R31
0007f1 93ea      	ST   -Y,R30
0007f2 85eb      	LDD  R30,Y+11
0007f3 85fc      	LDD  R31,Y+11+1
0007f4 9509      	ICALL
0007f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1C:
                +
0007f6 01fe     +MOVW R30 , R28
0007f7 5ae6     +SUBI R30 , LOW ( - 90 )
0007f8 4fff     +SBCI R31 , HIGH ( - 90 )
0007f9 9001     +LD R0 , Z +
0007fa 81f0     +LD R31 , Z
0007fb 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D:
0007fd 9734      	SBIW R30,4
                +
0007fe 01de     +MOVW R26 , R28
0007ff 5aa6     +SUBI R26 , LOW ( - 90 )
000800 4fbf     +SBCI R27 , HIGH ( - 90 )
000801 93ed     +ST X + , R30
000802 93fc     +ST X , R31
                 	__PUTW1SX 90
000803 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E:
000804 81ef      	LDD  R30,Y+7
000805 85f8      	LDD  R31,Y+7+1
000806 93fa      	ST   -Y,R31
000807 93ea      	ST   -Y,R30
000808 85eb      	LDD  R30,Y+11
000809 85fc      	LDD  R31,Y+11+1
00080a 9509      	ICALL
00080b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1F:
                +
00080c 01de     +MOVW R26 , R28
00080d 5aa6     +SUBI R26 , LOW ( - 90 )
00080e 4fbf     +SBCI R27 , HIGH ( - 90 )
00080f 900d     +LD R0 , X +
000810 91bc     +LD R27 , X
000811 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000812 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
000813 87ea     +STD Y + 10 , R30
000814 87fb     +STD Y + 10 + 1 , R31
000815 876c     +STD Y + 10 + 2 , R22
000816 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000817 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x21:
000818 dfdd      	RCALL SUBOPT_0x1C
000819 cfe3      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
00081a 85ea     +LDD R30 , Y + 10
00081b 85fb     +LDD R31 , Y + 10 + 1
00081c 856c     +LDD R22 , Y + 10 + 2
00081d 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00081e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x23:
00081f 87ee      	STD  Y+14,R30
000820 87ff      	STD  Y+14+1,R31
000821 93fa      	ST   -Y,R31
000822 93ea      	ST   -Y,R30
000823 940e 0636 	CALL _strlen
000825 2f1e      	MOV  R17,R30
000826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
000827 dfe4      	RCALL SUBOPT_0x1F
000828 9614      	ADIW R26,4
000829 940e 0aa4 	CALL __GETW1P
00082b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x25:
00082c 7f0b      	ANDI R16,LOW(251)
00082d 89ed      	LDD  R30,Y+21
00082e 93ea      	ST   -Y,R30
                +
00082f 01fe     +MOVW R30 , R28
000830 5ae9     +SUBI R30 , LOW ( - 87 )
000831 4fff     +SBCI R31 , HIGH ( - 87 )
000832 9001     +LD R0 , Z +
000833 81f0     +LD R31 , Z
000834 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000835 93fa      	ST   -Y,R31
000836 93ea      	ST   -Y,R30
                +
000837 01fe     +MOVW R30 , R28
000838 5ae5     +SUBI R30 , LOW ( - 91 )
000839 4fff     +SBCI R31 , HIGH ( - 91 )
00083a 9001     +LD R0 , Z +
00083b 81f0     +LD R31 , Z
00083c 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00083d 9509      	ICALL
00083e 3050      	CPI  R21,0
00083f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
000840 89e8     +LDD R30 , Y + 16
000841 89f9     +LDD R31 , Y + 16 + 1
000842 896a     +LDD R22 , Y + 16 + 2
000843 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000844 85aa     +LDD R26 , Y + 10
000845 85bb     +LDD R27 , Y + 10 + 1
000846 858c     +LDD R24 , Y + 10 + 2
000847 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000848 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000849 01de      	MOVW R26,R28
00084a 961c      	ADIW R26,12
00084b 940e 0a31 	CALL __ADDW2R15
00084d 940e 0aa4 	CALL __GETW1P
00084f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000850 940e 0aae 	CALL __GETD1S0
000852 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000853 81ee      	LDD  R30,Y+6
000854 81ff      	LDD  R31,Y+6+1
000855 93fa      	ST   -Y,R31
000856 93ea      	ST   -Y,R30
000857 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A:
                +
000858 87e9     +STD Y + 9 , R30
000859 87fa     +STD Y + 9 + 1 , R31
00085a 876b     +STD Y + 9 + 2 , R22
00085b 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00085c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B:
00085d 81ae      	LDD  R26,Y+6
00085e 81bf      	LDD  R27,Y+6+1
00085f 9611      	ADIW R26,1
000860 83ae      	STD  Y+6,R26
000861 83bf      	STD  Y+6+1,R27
000862 9711      	SBIW R26,1
000863 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C:
                +
000864 81aa     +LDD R26 , Y + 2
000865 81bb     +LDD R27 , Y + 2 + 1
000866 818c     +LDD R24 , Y + 2 + 2
000867 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000868 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
                +
000869 83ea     +STD Y + 2 , R30
00086a 83fb     +STD Y + 2 + 1 , R31
00086b 836c     +STD Y + 2 + 2 , R22
00086c 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00086d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2E:
                +
00086e 81ea     +LDD R30 , Y + 2
00086f 81fb     +LDD R31 , Y + 2 + 1
000870 816c     +LDD R22 , Y + 2 + 2
000871 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000872 85a9     +LDD R26 , Y + 9
000873 85ba     +LDD R27 , Y + 9 + 1
000874 858b     +LDD R24 , Y + 9 + 2
000875 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000876 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
                +
000877 85a9     +LDD R26 , Y + 9
000878 85ba     +LDD R27 , Y + 9 + 1
000879 858b     +LDD R24 , Y + 9 + 2
00087a 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00087b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00087c 91e9      	ld   r30,y+
00087d 91f9      	ld   r31,y+
00087e 9630      	adiw r30,0
00087f f039      	breq __delay_ms1
                 __delay_ms0:
                +
000880 ed80     +LDI R24 , LOW ( 0x7D0 )
000881 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000882 9701     +SBIW R24 , 1
000883 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000884 95a8      	wdr
000885 9731      	sbiw r30,1
000886 f7c9      	brne __delay_ms0
                 __delay_ms1:
000887 9508      	ret
                 
                 __ANEGF1:
000888 9730      	SBIW R30,0
000889 4060      	SBCI R22,0
00088a 4070      	SBCI R23,0
00088b f009      	BREQ __ANEGF10
00088c 5870      	SUBI R23,0x80
                 __ANEGF10:
00088d 9508      	RET
                 
                 __ROUND_REPACK:
00088e 2355      	TST  R21
00088f f442      	BRPL __REPACK
000890 3850      	CPI  R21,0x80
000891 f411      	BRNE __ROUND_REPACK0
000892 ffe0      	SBRS R30,0
000893 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000894 9631      	ADIW R30,1
000895 1f69      	ADC  R22,R25
000896 1f79      	ADC  R23,R25
000897 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000898 e850      	LDI  R21,0x80
000899 2757      	EOR  R21,R23
00089a f411      	BRNE __REPACK0
00089b 935f      	PUSH R21
00089c c0cf      	RJMP __ZERORES
                 __REPACK0:
00089d 3f5f      	CPI  R21,0xFF
00089e f031      	BREQ __REPACK1
00089f 0f66      	LSL  R22
0008a0 0c00      	LSL  R0
0008a1 9557      	ROR  R21
0008a2 9567      	ROR  R22
0008a3 2f75      	MOV  R23,R21
0008a4 9508      	RET
                 __REPACK1:
0008a5 935f      	PUSH R21
0008a6 2000      	TST  R0
0008a7 f00a      	BRMI __REPACK2
0008a8 c0cf      	RJMP __MAXRES
                 __REPACK2:
0008a9 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0008aa e850      	LDI  R21,0x80
0008ab 2e19      	MOV  R1,R25
0008ac 2215      	AND  R1,R21
0008ad 0f88      	LSL  R24
0008ae 1f99      	ROL  R25
0008af 2795      	EOR  R25,R21
0008b0 0f55      	LSL  R21
0008b1 9587      	ROR  R24
                 
                 __UNPACK1:
0008b2 e850      	LDI  R21,0x80
0008b3 2e07      	MOV  R0,R23
0008b4 2205      	AND  R0,R21
0008b5 0f66      	LSL  R22
0008b6 1f77      	ROL  R23
0008b7 2775      	EOR  R23,R21
0008b8 0f55      	LSL  R21
0008b9 9567      	ROR  R22
0008ba 9508      	RET
                 
                 __CFD1U:
0008bb 9468      	SET
0008bc c001      	RJMP __CFD1U0
                 __CFD1:
0008bd 94e8      	CLT
                 __CFD1U0:
0008be 935f      	PUSH R21
0008bf dff2      	RCALL __UNPACK1
0008c0 3870      	CPI  R23,0x80
0008c1 f018      	BRLO __CFD10
0008c2 3f7f      	CPI  R23,0xFF
0008c3 f408      	BRCC __CFD10
0008c4 c0a7      	RJMP __ZERORES
                 __CFD10:
0008c5 e156      	LDI  R21,22
0008c6 1b57      	SUB  R21,R23
0008c7 f4aa      	BRPL __CFD11
0008c8 9551      	NEG  R21
0008c9 3058      	CPI  R21,8
0008ca f40e      	BRTC __CFD19
0008cb 3059      	CPI  R21,9
                 __CFD19:
0008cc f030      	BRLO __CFD17
0008cd efef      	SER  R30
0008ce efff      	SER  R31
0008cf ef6f      	SER  R22
0008d0 e77f      	LDI  R23,0x7F
0008d1 f977      	BLD  R23,7
0008d2 c01a      	RJMP __CFD15
                 __CFD17:
0008d3 2777      	CLR  R23
0008d4 2355      	TST  R21
0008d5 f0b9      	BREQ __CFD15
                 __CFD18:
0008d6 0fee      	LSL  R30
0008d7 1fff      	ROL  R31
0008d8 1f66      	ROL  R22
0008d9 1f77      	ROL  R23
0008da 955a      	DEC  R21
0008db f7d1      	BRNE __CFD18
0008dc c010      	RJMP __CFD15
                 __CFD11:
0008dd 2777      	CLR  R23
                 __CFD12:
0008de 3058      	CPI  R21,8
0008df f028      	BRLO __CFD13
0008e0 2fef      	MOV  R30,R31
0008e1 2ff6      	MOV  R31,R22
0008e2 2f67      	MOV  R22,R23
0008e3 5058      	SUBI R21,8
0008e4 cff9      	RJMP __CFD12
                 __CFD13:
0008e5 2355      	TST  R21
0008e6 f031      	BREQ __CFD15
                 __CFD14:
0008e7 9576      	LSR  R23
0008e8 9567      	ROR  R22
0008e9 95f7      	ROR  R31
0008ea 95e7      	ROR  R30
0008eb 955a      	DEC  R21
0008ec f7d1      	BRNE __CFD14
                 __CFD15:
0008ed 2000      	TST  R0
0008ee f40a      	BRPL __CFD16
0008ef d145      	RCALL __ANEGD1
                 __CFD16:
0008f0 915f      	POP  R21
0008f1 9508      	RET
                 
                 __CDF1U:
0008f2 9468      	SET
0008f3 c001      	RJMP __CDF1U0
                 __CDF1:
0008f4 94e8      	CLT
                 __CDF1U0:
0008f5 9730      	SBIW R30,0
0008f6 4060      	SBCI R22,0
0008f7 4070      	SBCI R23,0
0008f8 f0b1      	BREQ __CDF10
0008f9 2400      	CLR  R0
0008fa f026      	BRTS __CDF11
0008fb 2377      	TST  R23
0008fc f412      	BRPL __CDF11
0008fd 9400      	COM  R0
0008fe d136      	RCALL __ANEGD1
                 __CDF11:
0008ff 2e17      	MOV  R1,R23
000900 e17e      	LDI  R23,30
000901 2011      	TST  R1
                 __CDF12:
000902 f032      	BRMI __CDF13
000903 957a      	DEC  R23
000904 0fee      	LSL  R30
000905 1fff      	ROL  R31
000906 1f66      	ROL  R22
000907 1c11      	ROL  R1
000908 cff9      	RJMP __CDF12
                 __CDF13:
000909 2fef      	MOV  R30,R31
00090a 2ff6      	MOV  R31,R22
00090b 2d61      	MOV  R22,R1
00090c 935f      	PUSH R21
00090d df8a      	RCALL __REPACK
00090e 915f      	POP  R21
                 __CDF10:
00090f 9508      	RET
                 
                 __SWAPACC:
000910 934f      	PUSH R20
000911 01af      	MOVW R20,R30
000912 01fd      	MOVW R30,R26
000913 01da      	MOVW R26,R20
000914 01ab      	MOVW R20,R22
000915 01bc      	MOVW R22,R24
000916 01ca      	MOVW R24,R20
000917 2d40      	MOV  R20,R0
000918 2c01      	MOV  R0,R1
000919 2e14      	MOV  R1,R20
00091a 914f      	POP  R20
00091b 9508      	RET
                 
                 __UADD12:
00091c 0fea      	ADD  R30,R26
00091d 1ffb      	ADC  R31,R27
00091e 1f68      	ADC  R22,R24
00091f 9508      	RET
                 
                 __NEGMAN1:
000920 95e0      	COM  R30
000921 95f0      	COM  R31
000922 9560      	COM  R22
000923 5fef      	SUBI R30,-1
000924 4fff      	SBCI R31,-1
000925 4f6f      	SBCI R22,-1
000926 9508      	RET
                 
                 __SUBF12:
000927 935f      	PUSH R21
000928 df81      	RCALL __UNPACK
000929 3890      	CPI  R25,0x80
00092a f171      	BREQ __ADDF129
00092b e850      	LDI  R21,0x80
00092c 2615      	EOR  R1,R21
                 
00092d c004      	RJMP __ADDF120
                 
                 __ADDF12:
00092e 935f      	PUSH R21
00092f df7a      	RCALL __UNPACK
000930 3890      	CPI  R25,0x80
000931 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000932 3870      	CPI  R23,0x80
000933 f121      	BREQ __ADDF128
                 __ADDF121:
000934 2f57      	MOV  R21,R23
000935 1b59      	SUB  R21,R25
000936 f12b      	BRVS __ADDF1211
000937 f412      	BRPL __ADDF122
000938 dfd7      	RCALL __SWAPACC
000939 cffa      	RJMP __ADDF121
                 __ADDF122:
00093a 3158      	CPI  R21,24
00093b f018      	BRLO __ADDF123
00093c 27aa      	CLR  R26
00093d 27bb      	CLR  R27
00093e 2788      	CLR  R24
                 __ADDF123:
00093f 3058      	CPI  R21,8
000940 f028      	BRLO __ADDF124
000941 2fab      	MOV  R26,R27
000942 2fb8      	MOV  R27,R24
000943 2788      	CLR  R24
000944 5058      	SUBI R21,8
000945 cff9      	RJMP __ADDF123
                 __ADDF124:
000946 2355      	TST  R21
000947 f029      	BREQ __ADDF126
                 __ADDF125:
000948 9586      	LSR  R24
000949 95b7      	ROR  R27
00094a 95a7      	ROR  R26
00094b 955a      	DEC  R21
00094c f7d9      	BRNE __ADDF125
                 __ADDF126:
00094d 2d50      	MOV  R21,R0
00094e 2551      	EOR  R21,R1
00094f f072      	BRMI __ADDF127
000950 dfcb      	RCALL __UADD12
000951 f438      	BRCC __ADDF129
000952 9567      	ROR  R22
000953 95f7      	ROR  R31
000954 95e7      	ROR  R30
000955 9573      	INC  R23
000956 f413      	BRVC __ADDF129
000957 c020      	RJMP __MAXRES
                 __ADDF128:
000958 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000959 df3e      	RCALL __REPACK
00095a 915f      	POP  R21
00095b 9508      	RET
                 __ADDF1211:
00095c f7d8      	BRCC __ADDF128
00095d cffb      	RJMP __ADDF129
                 __ADDF127:
00095e 1bea      	SUB  R30,R26
00095f 0bfb      	SBC  R31,R27
000960 0b68      	SBC  R22,R24
000961 f051      	BREQ __ZERORES
000962 f410      	BRCC __ADDF1210
000963 9400      	COM  R0
000964 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000965 2366      	TST  R22
000966 f392      	BRMI __ADDF129
000967 0fee      	LSL  R30
000968 1fff      	ROL  R31
000969 1f66      	ROL  R22
00096a 957a      	DEC  R23
00096b f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00096c 27ee      	CLR  R30
00096d 27ff      	CLR  R31
00096e 2766      	CLR  R22
00096f 2777      	CLR  R23
000970 915f      	POP  R21
000971 9508      	RET
                 
                 __MINRES:
000972 efef      	SER  R30
000973 efff      	SER  R31
000974 e76f      	LDI  R22,0x7F
000975 ef7f      	SER  R23
000976 915f      	POP  R21
000977 9508      	RET
                 
                 __MAXRES:
000978 efef      	SER  R30
000979 efff      	SER  R31
00097a e76f      	LDI  R22,0x7F
00097b e77f      	LDI  R23,0x7F
00097c 915f      	POP  R21
00097d 9508      	RET
                 
                 __MULF12:
00097e 935f      	PUSH R21
00097f df2a      	RCALL __UNPACK
000980 3870      	CPI  R23,0x80
000981 f351      	BREQ __ZERORES
000982 3890      	CPI  R25,0x80
000983 f341      	BREQ __ZERORES
000984 2401      	EOR  R0,R1
000985 9408      	SEC
000986 1f79      	ADC  R23,R25
000987 f423      	BRVC __MULF124
000988 f31c      	BRLT __ZERORES
                 __MULF125:
000989 2000      	TST  R0
00098a f33a      	BRMI __MINRES
00098b cfec      	RJMP __MAXRES
                 __MULF124:
00098c 920f      	PUSH R0
00098d 931f      	PUSH R17
00098e 932f      	PUSH R18
00098f 933f      	PUSH R19
000990 934f      	PUSH R20
000991 2711      	CLR  R17
000992 2722      	CLR  R18
000993 2799      	CLR  R25
000994 9f68      	MUL  R22,R24
000995 01a0      	MOVW R20,R0
000996 9f8f      	MUL  R24,R31
000997 2d30      	MOV  R19,R0
000998 0d41      	ADD  R20,R1
000999 1f59      	ADC  R21,R25
00099a 9f6b      	MUL  R22,R27
00099b 0d30      	ADD  R19,R0
00099c 1d41      	ADC  R20,R1
00099d 1f59      	ADC  R21,R25
00099e 9f8e      	MUL  R24,R30
00099f d027      	RCALL __MULF126
0009a0 9fbf      	MUL  R27,R31
0009a1 d025      	RCALL __MULF126
0009a2 9f6a      	MUL  R22,R26
0009a3 d023      	RCALL __MULF126
0009a4 9fbe      	MUL  R27,R30
0009a5 d01d      	RCALL __MULF127
0009a6 9faf      	MUL  R26,R31
0009a7 d01b      	RCALL __MULF127
0009a8 9fae      	MUL  R26,R30
0009a9 0d11      	ADD  R17,R1
0009aa 1f29      	ADC  R18,R25
0009ab 1f39      	ADC  R19,R25
0009ac 1f49      	ADC  R20,R25
0009ad 1f59      	ADC  R21,R25
0009ae 2fe3      	MOV  R30,R19
0009af 2ff4      	MOV  R31,R20
0009b0 2f65      	MOV  R22,R21
0009b1 2f52      	MOV  R21,R18
0009b2 914f      	POP  R20
0009b3 913f      	POP  R19
0009b4 912f      	POP  R18
0009b5 911f      	POP  R17
0009b6 900f      	POP  R0
0009b7 2366      	TST  R22
0009b8 f02a      	BRMI __MULF122
0009b9 0f55      	LSL  R21
0009ba 1fee      	ROL  R30
0009bb 1fff      	ROL  R31
0009bc 1f66      	ROL  R22
0009bd c002      	RJMP __MULF123
                 __MULF122:
0009be 9573      	INC  R23
0009bf f24b      	BRVS __MULF125
                 __MULF123:
0009c0 decd      	RCALL __ROUND_REPACK
0009c1 915f      	POP  R21
0009c2 9508      	RET
                 
                 __MULF127:
0009c3 0d10      	ADD  R17,R0
0009c4 1d21      	ADC  R18,R1
0009c5 1f39      	ADC  R19,R25
0009c6 c002      	RJMP __MULF128
                 __MULF126:
0009c7 0d20      	ADD  R18,R0
0009c8 1d31      	ADC  R19,R1
                 __MULF128:
0009c9 1f49      	ADC  R20,R25
0009ca 1f59      	ADC  R21,R25
0009cb 9508      	RET
                 
                 __DIVF21:
0009cc 935f      	PUSH R21
0009cd dedc      	RCALL __UNPACK
0009ce 3870      	CPI  R23,0x80
0009cf f421      	BRNE __DIVF210
0009d0 2011      	TST  R1
                 __DIVF211:
0009d1 f40a      	BRPL __DIVF219
0009d2 cf9f      	RJMP __MINRES
                 __DIVF219:
0009d3 cfa4      	RJMP __MAXRES
                 __DIVF210:
0009d4 3890      	CPI  R25,0x80
0009d5 f409      	BRNE __DIVF218
                 __DIVF217:
0009d6 cf95      	RJMP __ZERORES
                 __DIVF218:
0009d7 2401      	EOR  R0,R1
0009d8 9408      	SEC
0009d9 0b97      	SBC  R25,R23
0009da f41b      	BRVC __DIVF216
0009db f3d4      	BRLT __DIVF217
0009dc 2000      	TST  R0
0009dd cff3      	RJMP __DIVF211
                 __DIVF216:
0009de 2f79      	MOV  R23,R25
0009df 931f      	PUSH R17
0009e0 932f      	PUSH R18
0009e1 933f      	PUSH R19
0009e2 934f      	PUSH R20
0009e3 2411      	CLR  R1
0009e4 2711      	CLR  R17
0009e5 2722      	CLR  R18
0009e6 2733      	CLR  R19
0009e7 2744      	CLR  R20
0009e8 2755      	CLR  R21
0009e9 e290      	LDI  R25,32
                 __DIVF212:
0009ea 17ae      	CP   R26,R30
0009eb 07bf      	CPC  R27,R31
0009ec 0786      	CPC  R24,R22
0009ed 0741      	CPC  R20,R17
0009ee f030      	BRLO __DIVF213
0009ef 1bae      	SUB  R26,R30
0009f0 0bbf      	SBC  R27,R31
0009f1 0b86      	SBC  R24,R22
0009f2 0b41      	SBC  R20,R17
0009f3 9408      	SEC
0009f4 c001      	RJMP __DIVF214
                 __DIVF213:
0009f5 9488      	CLC
                 __DIVF214:
0009f6 1f55      	ROL  R21
0009f7 1f22      	ROL  R18
0009f8 1f33      	ROL  R19
0009f9 1c11      	ROL  R1
0009fa 1faa      	ROL  R26
0009fb 1fbb      	ROL  R27
0009fc 1f88      	ROL  R24
0009fd 1f44      	ROL  R20
0009fe 959a      	DEC  R25
0009ff f751      	BRNE __DIVF212
000a00 01f9      	MOVW R30,R18
000a01 2d61      	MOV  R22,R1
000a02 914f      	POP  R20
000a03 913f      	POP  R19
000a04 912f      	POP  R18
000a05 911f      	POP  R17
000a06 2366      	TST  R22
000a07 f032      	BRMI __DIVF215
000a08 0f55      	LSL  R21
000a09 1fee      	ROL  R30
000a0a 1fff      	ROL  R31
000a0b 1f66      	ROL  R22
000a0c 957a      	DEC  R23
000a0d f243      	BRVS __DIVF217
                 __DIVF215:
000a0e de7f      	RCALL __ROUND_REPACK
000a0f 915f      	POP  R21
000a10 9508      	RET
                 
                 __CMPF12:
000a11 2399      	TST  R25
000a12 f09a      	BRMI __CMPF120
000a13 2377      	TST  R23
000a14 f042      	BRMI __CMPF121
000a15 1797      	CP   R25,R23
000a16 f048      	BRLO __CMPF122
000a17 f429      	BRNE __CMPF121
000a18 17ae      	CP   R26,R30
000a19 07bf      	CPC  R27,R31
000a1a 0786      	CPC  R24,R22
000a1b f020      	BRLO __CMPF122
000a1c f031      	BREQ __CMPF123
                 __CMPF121:
000a1d 9498      	CLZ
000a1e 9488      	CLC
000a1f 9508      	RET
                 __CMPF122:
000a20 9498      	CLZ
000a21 9408      	SEC
000a22 9508      	RET
                 __CMPF123:
000a23 9418      	SEZ
000a24 9488      	CLC
000a25 9508      	RET
                 __CMPF120:
000a26 2377      	TST  R23
000a27 f7c2      	BRPL __CMPF122
000a28 1797      	CP   R25,R23
000a29 f398      	BRLO __CMPF121
000a2a f7a9      	BRNE __CMPF122
000a2b 17ea      	CP   R30,R26
000a2c 07fb      	CPC  R31,R27
000a2d 0768      	CPC  R22,R24
000a2e f388      	BRLO __CMPF122
000a2f f399      	BREQ __CMPF123
000a30 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000a31 2400      	CLR  R0
000a32 0daf      	ADD  R26,R15
000a33 1db0      	ADC  R27,R0
000a34 9508      	RET
                 
                 __ANEGD1:
000a35 95f0      	COM  R31
000a36 9560      	COM  R22
000a37 9570      	COM  R23
000a38 95e1      	NEG  R30
000a39 4fff      	SBCI R31,-1
000a3a 4f6f      	SBCI R22,-1
000a3b 4f7f      	SBCI R23,-1
000a3c 9508      	RET
                 
                 __CBD1:
000a3d 2ffe      	MOV  R31,R30
000a3e 0fff      	ADD  R31,R31
000a3f 0bff      	SBC  R31,R31
000a40 2f6f      	MOV  R22,R31
000a41 2f7f      	MOV  R23,R31
000a42 9508      	RET
                 
                 __CWD1:
000a43 2f6f      	MOV  R22,R31
000a44 0f66      	ADD  R22,R22
000a45 0b66      	SBC  R22,R22
000a46 2f76      	MOV  R23,R22
000a47 9508      	RET
                 
                 __MULW12U:
000a48 9ffa      	MUL  R31,R26
000a49 2df0      	MOV  R31,R0
000a4a 9feb      	MUL  R30,R27
000a4b 0df0      	ADD  R31,R0
000a4c 9fea      	MUL  R30,R26
000a4d 2de0      	MOV  R30,R0
000a4e 0df1      	ADD  R31,R1
000a4f 9508      	RET
                 
                 __DIVB21U:
000a50 2400      	CLR  R0
000a51 e098      	LDI  R25,8
                 __DIVB21U1:
000a52 0faa      	LSL  R26
000a53 1c00      	ROL  R0
000a54 1a0e      	SUB  R0,R30
000a55 f410      	BRCC __DIVB21U2
000a56 0e0e      	ADD  R0,R30
000a57 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000a58 60a1      	SBR  R26,1
                 __DIVB21U3:
000a59 959a      	DEC  R25
000a5a f7b9      	BRNE __DIVB21U1
000a5b 2fea      	MOV  R30,R26
000a5c 2da0      	MOV  R26,R0
000a5d 9508      	RET
                 
                 __DIVB21:
000a5e d039      	RCALL __CHKSIGNB
000a5f dff0      	RCALL __DIVB21U
000a60 f40e      	BRTC __DIVB211
000a61 95e1      	NEG  R30
                 __DIVB211:
000a62 9508      	RET
                 
                 __DIVD21U:
000a63 933f      	PUSH R19
000a64 934f      	PUSH R20
000a65 935f      	PUSH R21
000a66 2400      	CLR  R0
000a67 2411      	CLR  R1
000a68 2744      	CLR  R20
000a69 2755      	CLR  R21
000a6a e230      	LDI  R19,32
                 __DIVD21U1:
000a6b 0faa      	LSL  R26
000a6c 1fbb      	ROL  R27
000a6d 1f88      	ROL  R24
000a6e 1f99      	ROL  R25
000a6f 1c00      	ROL  R0
000a70 1c11      	ROL  R1
000a71 1f44      	ROL  R20
000a72 1f55      	ROL  R21
000a73 1a0e      	SUB  R0,R30
000a74 0a1f      	SBC  R1,R31
000a75 0b46      	SBC  R20,R22
000a76 0b57      	SBC  R21,R23
000a77 f428      	BRCC __DIVD21U2
000a78 0e0e      	ADD  R0,R30
000a79 1e1f      	ADC  R1,R31
000a7a 1f46      	ADC  R20,R22
000a7b 1f57      	ADC  R21,R23
000a7c c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000a7d 60a1      	SBR  R26,1
                 __DIVD21U3:
000a7e 953a      	DEC  R19
000a7f f759      	BRNE __DIVD21U1
000a80 01fd      	MOVW R30,R26
000a81 01bc      	MOVW R22,R24
000a82 01d0      	MOVW R26,R0
000a83 01ca      	MOVW R24,R20
000a84 915f      	POP  R21
000a85 914f      	POP  R20
000a86 913f      	POP  R19
000a87 9508      	RET
                 
                 __MODB21:
000a88 94e8      	CLT
000a89 ffa7      	SBRS R26,7
000a8a c002      	RJMP __MODB211
000a8b 95a1      	NEG  R26
000a8c 9468      	SET
                 __MODB211:
000a8d fde7      	SBRC R30,7
000a8e 95e1      	NEG  R30
000a8f dfc0      	RCALL __DIVB21U
000a90 2fea      	MOV  R30,R26
000a91 f40e      	BRTC __MODB212
000a92 95e1      	NEG  R30
                 __MODB212:
000a93 9508      	RET
                 
                 __MODD21U:
000a94 dfce      	RCALL __DIVD21U
000a95 01fd      	MOVW R30,R26
000a96 01bc      	MOVW R22,R24
000a97 9508      	RET
                 
                 __CHKSIGNB:
000a98 94e8      	CLT
000a99 ffe7      	SBRS R30,7
000a9a c002      	RJMP __CHKSB1
000a9b 95e1      	NEG  R30
000a9c 9468      	SET
                 __CHKSB1:
000a9d ffa7      	SBRS R26,7
000a9e c004      	RJMP __CHKSB2
000a9f 95a1      	NEG  R26
000aa0 f800      	BLD  R0,0
000aa1 9403      	INC  R0
000aa2 fa00      	BST  R0,0
                 __CHKSB2:
000aa3 9508      	RET
                 
                 __GETW1P:
000aa4 91ed      	LD   R30,X+
000aa5 91fc      	LD   R31,X
000aa6 9711      	SBIW R26,1
000aa7 9508      	RET
                 
                 __GETD1P:
000aa8 91ed      	LD   R30,X+
000aa9 91fd      	LD   R31,X+
000aaa 916d      	LD   R22,X+
000aab 917c      	LD   R23,X
000aac 9713      	SBIW R26,3
000aad 9508      	RET
                 
                 __GETD1S0:
000aae 81e8      	LD   R30,Y
000aaf 81f9      	LDD  R31,Y+1
000ab0 816a      	LDD  R22,Y+2
000ab1 817b      	LDD  R23,Y+3
000ab2 9508      	RET
                 
                 __PUTD1S0:
000ab3 83e8      	ST   Y,R30
000ab4 83f9      	STD  Y+1,R31
000ab5 836a      	STD  Y+2,R22
000ab6 837b      	STD  Y+3,R23
000ab7 9508      	RET
                 
                 __PUTPARD1:
000ab8 937a      	ST   -Y,R23
000ab9 936a      	ST   -Y,R22
000aba 93fa      	ST   -Y,R31
000abb 93ea      	ST   -Y,R30
000abc 9508      	RET
                 
                 __SWAPD12:
000abd 2e18      	MOV  R1,R24
000abe 2f86      	MOV  R24,R22
000abf 2d61      	MOV  R22,R1
000ac0 2e19      	MOV  R1,R25
000ac1 2f97      	MOV  R25,R23
000ac2 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000ac3 2e1b      	MOV  R1,R27
000ac4 2fbf      	MOV  R27,R31
000ac5 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000ac6 2e1a      	MOV  R1,R26
000ac7 2fae      	MOV  R26,R30
000ac8 2de1      	MOV  R30,R1
000ac9 9508      	RET
                 
                 __CPD10:
000aca 9730      	SBIW R30,0
000acb 4060      	SBCI R22,0
000acc 4070      	SBCI R23,0
000acd 9508      	RET
                 
                 __CPD02:
000ace 2400      	CLR  R0
000acf 160a      	CP   R0,R26
000ad0 060b      	CPC  R0,R27
000ad1 0608      	CPC  R0,R24
000ad2 0609      	CPC  R0,R25
000ad3 9508      	RET
                 
                 __SAVELOCR6:
000ad4 935a      	ST   -Y,R21
                 __SAVELOCR5:
000ad5 934a      	ST   -Y,R20
                 __SAVELOCR4:
000ad6 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ad7 932a      	ST   -Y,R18
                 __SAVELOCR2:
000ad8 931a      	ST   -Y,R17
000ad9 930a      	ST   -Y,R16
000ada 9508      	RET
                 
                 __LOADLOCR6:
000adb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000adc 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000add 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ade 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000adf 8119      	LDD  R17,Y+1
000ae0 8108      	LD   R16,Y
000ae1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  68 r1 :  35 r2 :   0 r3 :   3 r4 :   3 r5 :   4 r6 :   4 r7 :   2 
r8 :   4 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  61 r17:  68 r18:  48 r19:  35 r20:  50 r21:  90 r22: 115 r23: 101 
r24:  74 r25:  62 r26: 167 r27:  76 r28:  38 r29:   1 r30: 569 r31: 205 
x  :  42 y  : 401 z  :  26 
Registers used: 28 out of 35 (80.0%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  24 add   :  19 
adiw  :  35 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  53 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  29 
brlt  :   4 brmi  :  11 brne  :  70 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 193 
cbi   :  11 cbr   :   2 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  52 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  23 cpc   :  27 cpi   :  84 cpse  :   0 dec   :  16 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   8 inc   :   5 jmp   :  38 ld    :  60 ldd   : 186 ldi   : 272 
lds   :  21 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  86 movw  :  55 
mul   :  14 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   0 
ori   :  11 out   :  19 pop   :  22 push  :  22 rcall :  98 ret   : 103 
reti  :   1 rjmp  : 145 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :  18 sbic  :   0 sbis  :   0 sbiw  :  32 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 125 std   :  87 sts   :  29 sub   :   6 subi  :  54 swap  :   1 
tst   :  24 wdr   :   2 
Instructions used: 80 out of 116 (69.0%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0015c4   5474     98   5572   32768  17.0%
[.dseg] 0x000100 0x00031d      0     29     29    2303   1.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 9 warnings
